%!PS-Adobe-3.0 EPSF-3.0
%%Title: (ChartLib printing)
%%Version: 1 5
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 22:21:39 10/13/10
%%For: (frey)
%%DocumentData: Clean7Bit
%%BoundingBox: 66 427 531 780
%%HiResBoundingBox: 65.947861 426.916473 531.462097 779.931458
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.18 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.18 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1239 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:5855933d-4ec6-45f3-b96f-3e39530c57a8' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:5855933d-4ec6-45f3-b96f-3e39530c57a8' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreatorTool='PScript5.dll Version 5.2' xap:ModifyDate='2010-10-13T22:21:30+02:00' xap:CreateDate='2010-10-13T22:20:44+02:00' xap:MetadataDate='2010-10-13T22:21:30+02:00'></rdf:Description>
<rdf:Description rdf:about='uuid:5855933d-4ec6-45f3-b96f-3e39530c57a8' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:fdd1e9c1-2909-445d-9ec4-25f62f8914fc'/>
<rdf:Description rdf:about='uuid:5855933d-4ec6-45f3-b96f-3e39530c57a8' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>ChartLib printing</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>frey</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
66 427 466 353 rectclip
/N13 [/DeviceRGB] /ColorSpace defineRes pop

%ADOBeginSubsetFont: LGBDPB+ArialMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (LGBDPB+ArialMT)
%%Title: (LGBDPB+ArialMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /LGBDPB+ArialMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-665 -325 2000 1006} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 1674 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A93
6AA182F5809A9> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /LGBDPB+ArialMT-Identity-H /Identity-H 0 [/LGBDPB+ArialMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N11 (LGBDPB+ArialMT-Identity-H)
/N11 (LGBDPB+ArialMT-Identity-H) /Identity-H [ (LGBDPB+ArialMT) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
%ADOBeginSubsetFont: LGBEAB+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /LGBEAB+ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320cdf326b000000cc000000566376
7420962ad27600000124000006306670676dcc79599a000007540000066e
676c7966283219fe00005350000011ac68656164ce98269200000dc40000
003668686561123312ff00000dfc00000024686d74780e34584000000e20
00001a286c6f63610071f2500000284800001a2c6d6178700b470ca80000
4274000000206e616d65b659120100004294000005bb7072657052fec4e9
0000485000000aff67646972000000000000000000000000000103880190
00050000059a05330000011b059a0533000003d1006602120805020b0604
02020202020400007a878000000000000008000000004d6f6e6f00400020
fffc05d3fe510133073e01b2400001ffffff000011c005ba001905ba001a
05a70019042600180000ffe70000ffe80000ffe7fe69ffe805ba0019fe69
ffe802ea000000b8000000b80000000000a800ad016900ad00bf00c201f0
001800af00b900b400c800170044009c007c009400870006005a00c80089
005200520005004400940119ffb4002f00a1000300a100cd00170057007e
00ba00160118ffe9007f008503d300870085000d002200410050006f008d
014cff75005c00df04830037004c006e00700180ff58ff8eff92ffa400a5
00b903c8fffd000b001a0063006300cdffee05d8ffdc002d005c00950099
00df019209b500400057008000b9039d0072009a035d0401ff67fffa0003
0021007700cd0004004d00cd01c0022b004c006500e70118017c034305d8
ffa3ffb0ffc40003001c005d0068009a00ba013501470221055cff4dffcd
0016002d00780080009900b200b600b600b800bd00da010c05f0ffa4fff0
0019002c0049007f00b400ce01c003fefd81fe3f00000005001800290039
0049006f00be00c700d0012301c1026f050c05320540057affd400140031
0055005700a700b400e601f7027e027e027f03c60446ff42000e00850091
00bf00c200c500e1011a012f014f01560229026f029e03720008002c0031
0031006400690089009800c700de012b01b6020c02cf03a304ab04fb061d
fee0ff0e00060026009b009d00c1010d011801200173018201d601e30243
025f029b02e2039404a904d20761001c005e006d008d00ab00f701120138
0151015b0168017c01870191019901cd01d001e802410254026b02ef0368
037103bd044204420453047304830586058b06e8fe58fec4fed1fef7ff32
ff860051007c008100910095009e00b400b900cf00d900d900df00e20105
010b010e010e012001210155017b017b017e018d01a201a801a901b401d0
01d001e201e901f201f501fb020002000206021b02210222022202230272
02770294029c02cf02cf02d002ec02f903170322032b0335033c0359036f
037103870390039003b503e1041a04cf04ff053205320596059f05a805ab
05c205f0060c0782080008ccfca3fd2afddefe00fe88fe96feb2feb4ffe1
00150019001a001c001f003c005100610061006a0078009600a500af00d3
010c0118011a012a013e014c0151015f016a0171017801820184019a01a5
01a801a901ae01bc01cd01d701ef0200020d021c02210222022e02350242
024f024f025e026502710290029202b402d602fa0307030b030f0315032a
0347035d036503740379039603b003cc03dd03e203f603fc03fc03ff040a
041f04220426042b0447045f0475049e04e704e7055c05cb05e5060a066d
068606b806f10736073e07500751075d078f07b607d4086000b600c300b5
00b700000000000000000000000001e00381034503b5008e0233041902ce
02ce002d005f0064034d023f000002a80188027d01b402240578063b023b
014e00f00426029402c6029f02f6023b034d014b0153006a023100000000
0000061404aa0000003c04c300ed04bc026502ce03b50078060c017e02ef
060c00b201000239000001c50330042b03cb00da03df010704a100db040a
011701ed02a70350010b01bd043e05580021039c00ae0371017d00b50245
00000afb088c012b014e01aa00870054013201f803ff0003024e00b40037
03e30083006b02d800ed00770088009701640467008e0033017c00e700a6
029e0329056e062a061501c90269048a021301b4000204a9000002390124
010305140084015d039a06ef02d9007500cf040a00de03ac04bc02cf02ae
034d04f005520168006d007d00860071ff810079055804d2016700030156
002504e00094007c033204210094007f0072005c002f00b6001800ba00b8
0041034d00720018001f004c016a01550099009a009a009800b200040078
006900140057006e00ce00b4065402b80067050e016500e7000004cbfe52
005affa60099ff67006eff92002dffd40087ff7c00b800a800e5008f00a8
0185fe7b0070001e00d900de014c054602cf0546ff2d028a02d902530296
00b700000000000000000000000000000125011800ea00ea00ae0000003e
05bb008a04d70053003fff8cffd500150028002200990062004a00e4006d
00ee00e5004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a
0068ff6c004f00bc00a507050061072b4043555441403f3e3d3c3b3a3938
373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19
1817161514131211100f0e0d0c0b0a090807060504030201002c45234660
20b02660b004262348482d2c452346236120b02661b004262348482d2c45
234660b0206120b04660b004262348482d2c4523462361b0206020b02661
b02061b004262348482d2c45234660b0406120b06660b004262348482d2c
4523462361b0406020b02661b04061b004262348482d2c0110203c003c2d
2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b0
4d44235920b09051582320b00d44235921212d2c20204518684420b00160
2045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b432343
0b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45
b01a234445b01923442d2c2045b00325456164b050515845441b2121592d
2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b0
0743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364
615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb017
23442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b017
23448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae4595918
2d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b001
85592d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b8022323701020b802234520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c4b5258b004
25b0042549b00425b00425496120b0005458212043b0005558b00325b003
25b8ffc038b8ffc038591bb04054582043b0005458b00225b8ffc038591b
2043b0005458b00325b00325b8ffc038b8ffc0381bb00325b8ffc0385959
5959212121212d2c462346608a8a462320468a608a61b8ff806223201023
8ab902c202c28a70456020b0005058b00161b8ffba8b1bb0468c59b01060
68013a2d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b94000020063b804
00885458b202400243604259595959592d2cb0024354584b53234b515a58
381b2121591b21212121592d74c0000100000003000030204e585f0f3cf5
081b080000000000a2e3272a00000000b9d5b4f6faaffd671000080c0000
000900010001000075c000010000073efe4e00431000faaffe2610000001
0000000000000000000000000000068a0600010000000000023900000239
0000023900b002d7005e0473001504730049071d0077055600580187005a
02aa007c02aa007c031d004004ac0072023900aa02aa0041023900ba0239
000004730055047300df0473003c047300560473001a047300550473004d
047300610473005304730055023900b9023900aa04ac007004ac007204ac
00700473005a081f006f0556fffd0556009605c7006605c7009e055600a2
04e300a80639006d05c700a4023900bf04000037055600960473009606aa
009805c7009c063900630556009e0639005805c700a10556005c04e30030
05c700a105560009078d0019055600090556000604e300290239008b0239
00000239002703c100360473ffe102aa00590473004a0473008604000050
047300460473004b02390013047300420473008701c7008801c7ffa20400
008801c7008306aa00870473008704730044047300870473004802aa0085
0400003f02390024047300830400001a05c700060400000f040000210400
002802ac0039021400bc02ac002f04ac00570556fffd0556fffd05c70068
055600a205c7009c0639006305c700a10473004a0473004a0473004a0473
004a0473004a0473004a040000500473004b0473004b0473004b0473004b
023900bd023900230239ffe5023900090473008704730044047300440473
004404730044047300440473008304730083047300830473008304730049
033300800473006b0473001b0473005102cd006d044c000104e3009905e5
000305e50003080000e102aa00de02aa003d0464004e0800000106390053
05b4009a0464004e0464004d0464004d0473fffd049c00a003f4003805b4
007a069600a1046400000231000002f6002f02ec002d0625007f071d0044
04e3008104e3009e02aa00e804ac0072046400540473002e0464003304e5
001a047300860473008c080000ef0556fffd0556fffd0639006308000081
078d00520473fffc0800000002aa005302aa004701c7008001c7006c0464
004e03f4002f04000021055600060156fe390473ffe402aa005c02aa005c
040000170400001704730049023900b901c7006c02aa0047080000250556
fffd055600a20556fffd055600a2055600a20239008d0239ffe002390004
0239001506390063063900630639006305c700a105c700a105c700a10239
00c602aa001902aa000602aa001d02aa002e02aa00e502aa00a202aa006b
02aa003a02aa00b702aa00280473000001c700030556005c0400003f04e3
002904000028021400bc05c7fffd0473004905560006040000210556009e
0473008704ac007204ac00a102aa006b02aa001902aa002106ac006b06ac
006b06ac0021047300000639006d04730042023900b10556005c0400003f
05c700660400005005c700660400005004730046046bffe102aa01f10556
fffd0473004a0556fffd0473004a05c7009e04eb004705c7fffd055600a2
0473004b055600a20473004b0473009601c7004204730096025500880473
009a02ac008305c7009c0473008705c7009c047300870639006304730044
05c700a102aa008505c700a102aa003c0556005c0400003f04e300300239
002404e300300300002305c700a10473008305c700a10473008304e30029
0400002804e3002904000028046800a4063900600662005504a000480474
00480391006204f000440329002e05300048046bffe1040000b002eb0052
08c000330800004f040000990800004f040000990800004f040000980400
009807d5016a05c0009e04ab007204d5009d04ac007104d5022204d50105
05abffe9050001c905ab027e05abffe905ab027e05abffe905ab027e05ab
ffe905abffe905abffe905abffe905abffe905ab01c005ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905ab02d6
05ab006605abffea05d5ffff04d500920800000007eb013007eb012007eb
013007eb012004d500b204d5008004d5002a082b0198086b01b807550010
060000f40600006f0440003a0540003704c0003f04150040040000250600
005505e100bf038d008904d5ffd90180008002d50086071500610296000f
04d5009202d6008302d6008304d500b202d600700556fffd0473004a05c7
00660400005005c7006604000050055600a20473004b055600a20473004b
055600a20473004b0639006d047300420639006d047300420639006d0473
004205c700a40473008705c7001f047300060239ffce0239ffce0239ffe4
0239ffe40239fff60239fff5023900a301c700660400003701c7ffa20556
009604000088040000860473009601c7fffa05c7009c0473008705c900a5
0473008b0639006304730044063900630473004405c700a102aa006b0556
005c0400003f04e300300239000c05c700a10473008305c700a104730083
05c700a10473008305c700a104730083078d001905c70006055600060400
002101c700890556fffd0473004a08000001071d00440639005304e30081
023900b9078d001905c70006078d001905c70006078d001905c700060556
00060400002101c7008a02aaffe10473001b04cd005a06ac006b06ac0022
06ac002206ac004a02aa00e202aa006b02aa00de02aaffea0557ffff0646
ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7ff780556fffd
055600960558fffe055600a204e3002905c700a4023900bf055600960558
000b06aa009805c7009c0533006d0639006305c700a40556009e04f20094
04e30030055600060556000906af007f05fb0061023900040556000604a0
0048039100620473008b01c7006b04600088049a008c0400001903870048
0473008b0473005c01c700890400008604000018049c00a00400001a0395
005c04730044048d008303db0056046000880433001105b4007a063f0057
01c7ffc9046000880473004804600088063f0057055700a206eb00320455
00a105c000640556005c023900bf02390004040000370875000d081500a4
06d5003104a900a10515000a05c000a00556fffd054000a7055600960455
00a1056b0000055600a20763000704d5004e05c000a105c000a104a900a1
0540001206aa009805c700a40639006305c000a00556009e05c7006604e3
00300515000a061500520556000905eb009f05550057075500a1078000a1
06550000071500a8054000a505c00055081500a405c7001a0473004a0495
005b0440008802eb008804ab00000473004b055afffb03ab003204780087
047800870380008604ab00180580008c046b008804730044045500880473
00870400005003aa0026040000210695004b0400000f0495008a042b0045
066b008d0695008d0500002805c0008b042b008404150030060000890455
001f0473004b0473000002eb00890415004b0400003f01c7008802390009
01c7ffa20740001306800083047300000380008604000021046b008803e9
00a1034a008808000041089500a00585002d02aa010102aa001e02aa0031
02aa003102aa010102aa007e02aa007e02aa008c02aa008c02aa010102aa
001002aa010102aa01210310007d02aa008c023300d202aa030b02aaff04
023900b90481006904560032033100190411002d04d1009601f9009b030f
005f04ca009b04b8008c01f9009b0413002803b0005003b4003c04ca009b
04cf005001f9009b02d2003c0498005a043c00190488006e045f007303b1
001903d4000a0466009604130028058e00640524002803f2009b03f2009b
03f2009b01e3005a0356005a0686009b01f9ffac041300280413002803b4
ff5703b4ff570448002d058e0064058e0064058e0064058e006404810069
048100690481006904560032033100190411002d04d10096024b0000034a
000004b8008c024b00000413002803b0005003b4003c04cf005002d2003c
0498005a0488006e045f007303d4000a0466009604130028058e00640524
002801f9009b0456003203b00050045f0073049b003c0000ffdc0000ff25
0000ffdc0000fe51028d00ab028d00a002da0043034d007901a8ffba019c
004601e50046019c0046019c004601ad0048019c004601b1004601510046
0435017c0435012e043500b7043500810435012c043500be043500af0435
00810435009a043500db04350085028d00c1043500b30600010006000100
02420036060001000435009e04350098043500cb06000100060001000600
0100060001000600010001b1004606000100060001000600010006000100
06000100060001000600010006000100051bffba06000100060001000600
010005b5003a05b5003a01f4ffba01f4ffba060001000600010006000100
060001000481003604350036043dffba043dffba03e9004a03e9004a067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
051b003204b5002406000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010001cf003001b1004601b1004601b1004001b1
004606000100060001000000ffdc0000fe510000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ff160000ffdc0000
ff160000ffdc0000ff200000ffdc0473004a080000000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100060001000600010006000100028d007f028d005d0600010004ee0015
034d007901a8000e01d6ffdc01a8005601d60010037500320375003201a8
002d01d60013051b003204b5002401f4ffba01f4ffba01a8009301d60013
05b5003a05b5003a01f4ffba01f4ffba024200000300fff705b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3005f02b3005f02b3005f02b3005f
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba064f0027064f
00270224ffba021affba04a7004604a700460224ffba021affba04cf002d
04cf002d0327ffba0327ffba040d0047040d004701a8ffba01a8ffba02b4
002302b400230327ffba0327ffba043500450435004501f4ffba01f4ffba
024200360300fff7039affba0327ffba0375003203750032051b003204b5
0024051b003204b5002401f4ffba01f4ffba045a004004ce0049045a0026
04ce0039045a005304ce004a045a005304ce004a0600010006000100019c
0046019c00460600010006000100060001000151004601b1004606000100
0600010001ad004801e5004606000100060001000600010001b1004601b1
004601b1004601b1004601b1004001cf003006000100019c0046019c0046
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100028d00ca028d00c7028d00c6060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100060001000100ffba0800
ffba1000ffba06dc0063053f004406d500a1055b00830000fddc0000fc2f
0000fca60000fe540000fcd70000fd730000fe290000fe0d0000fd110000
fc670000fd9d0000fbf50000fc720000fed50000fed50000ff02041b00a0
06ac006b06ac00190000feb60000fd730000fe080000fca60000fe530000
fd110000fbc80000faf40000faaf0000fc720000fbaa0000fb6a0000fcf1
0000fc7d0000fbdd0000fcc10000fb980000fdea0000fe840000fdc20000
fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000fd580000fc90
0000fd150000fc2c0000fc130000fc120000fb960000fb9601c700880556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd
0473004a055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b055600a20473004b
055600a20473004b0239006301c7001f023900ba01c7007c063900630473
004406390063047300440639006304730044063900630473004406390063
047300440639006304730044063900630473004406dc0063053f004406dc
0063053f004406dc0063053f004406dc0063053f004406dc0063053f0044
05c700a10473008305c700a10473008306d500a1055b008306d500a1055b
008306d500a1055b008306d500a1055b008306d500a1055b008305560006
04000021055600060400002105560006040000210556fffd0473004a0239
ffe201c7ffb0063900630473004405c700a10473008305c700a104730083
05c700a10473008305c700a10473008305c700a1047300830000fefe0000
fefe0000fefe0000fefe0455fffd02eb000c07630007055afffb04a900a1
0380008604a900a10380008605c700a4046b00880473fffd040000140473
fffd04000014055600090400000f05550057042b0045055500a104730087
0605006304730055063900600473004405b5003a01f4ffba0224ffba021a
ffba04a7004601f4009e01f4001001f4001b01f4001001f4006b01f4fff9
0227ffce01a8000f01a8fff502aa00a402aa00a401a8000e01a8005601a8
00560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8001d01d6fff5
01a8009301d6001303750032037500320375003203750032051b003204b5
002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3003202b3
003202b3005f02b3005f02b3005f02b3005f02b3005f02b3005f02b30038
02b3003802b3004902b3004903e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5
ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba
064f0027064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba04a7004604a7
004604a7004604a70046067f0014077600140327ffba041effba067f0014
077600140327ffba041effba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba043500450435
004501f4ffba01f4ffba0435004504350045043500450435004504350045
0435004501f4ffba01f4ffba04350045043500450481003604350036043d
ffba043dffba024200360300fff7031a001a031a001a031a001a03750032
037500320375003203750032037500320375003203750032037500320375
003203750032037500320375003203750032037500320375003203750032
051bffba04b5ffba051b003204b5002401f4ffba01f4ffba037500320375
0032051b003204b5002401f4ffba01f4ffba051b003204b50024067f0045
067f0045067f0045067f004501a800280000fe290000fea20000ff300000
ff1d0000ff120000ff920000fe7e08fc003208ad00320000ffb50000ffb6
0000feed0000ff640000fe7e0000ff9f018d000002f6fffd0000fe820000
ff1004cd00320000ff580000ff580000ff640692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a039a00360435
ffba0327ffba034d007902b400230242003601f4ffba0290ffba01f4002f
01f4003b01f4001201f400b101f4006d067f00140776001401f9009b0000
fed902bc000003f2009b045afff504cefff5045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a045a005304ce004a045a
005304ce004a04350071043500ad045a000f04ce000f000000000000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
002a0000002a0000002a0000002a0000002a0000002a0000002a0000002a
00000070000000ac000000ac00000268000003440000056e000007480000
08a800000a6200000c3800000ce400000f78000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac000011ac000011ac000011ac000011ac000011ac000011ac000011ac
000011ac000011ac000011ac000011ac000011ac000011ac000011ac0000
11ac00010000068a0100003f0076000700020010002f00560000040d0aff
000300020000000e00ae000000030000000000fe00000000000300000007
00c400fe0001000000000000007f01c20001000000000003000e02410001
000000000004000e024f0001000000000006000e025d0001000000000007
0062026b000300010409000000fe02cd0003000104090001001c03cb0003
000104090002000e03e70003000104090003001c03f50003000104090004
001c04110003000104090006001c042d000300010409000700c404490054
0079007000650066006100630065002000a900200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200070006c0063002e002000440061007400610020
00a900200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e00200070006c0063
002f005400790070006500200053006f006c007500740069006f006e0073
00200049006e0063002e00200031003900390030002d0031003900390032
002e00200041006c006c0020005200690067006800740073002000520065
0073006500720076006500640041007200690061006c00ae002000540072
006100640065006d00610072006b0020006f006600200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e00200070006c0063002000720065006700690073
0074006500720065006400200069006e0020007400680065002000550053
00200050006100740020002600200054004d0020004f00660066002e0020
0061006e006400200065006c0073006500770068006500720065002e5479
70656661636520a920546865204d6f6e6f7479706520436f72706f726174
696f6e20706c632e204461746120a920546865204d6f6e6f747970652043
6f72706f726174696f6e20706c632f5479706520536f6c7574696f6e7320
496e632e20313939302d313939322e20416c6c2052696768747320526573
65727665644c47424541422b417269616c4d544c47424541422b41726961
6c4d544c47424541422b417269616c4d54417269616ca82054726164656d
61726b206f6620546865204d6f6e6f7479706520436f72706f726174696f
6e20706c63207265676973746572656420696e2074686520555320506174
202620544d204f66662e20616e6420656c736577686572652e0054007900
7000650066006100630065002000a900200054006800650020004d006f00
6e006f007400790070006500200043006f00720070006f00720061007400
69006f006e00200070006c0063002e00200044006100740061002000a900
200054006800650020004d006f006e006f00740079007000650020004300
6f00720070006f0072006100740069006f006e00200070006c0063002f00
5400790070006500200053006f006c007500740069006f006e0073002000
49006e0063002e00200031003900390030002d0031003900390032002e00
200041006c006c0020005200690067006800740073002000520065007300
650072007600650064004c00470042004500410042002b00410072006900
61006c004d00540052006500670075006c00610072004c00470042004500
410042002b0041007200690061006c004d0054004c004700420045004100
42002b0041007200690061006c004d0054004c0047004200450041004200
2b0041007200690061006c004d00540041007200690061006c00ae002000
540072006100640065006d00610072006b0020006f006600200054006800
650020004d006f006e006f007400790070006500200043006f0072007000
6f0072006100740069006f006e00200070006c0063002000720065006700
6900730074006500720065006400200069006e0020007400680065002000
55005300200050006100740020002600200054004d0020004f0066006600
2e00200061006e006400200065006c007300650077006800650072006500
2ec4b1540f4122031700ef031700ff03170003001f0317002f0317004f03
17005f0317008f0317009f03170006000f0317005f0317006f0317007f03
1700bf031700f00317000600400317b2923340b80317b28b3340b80317b3
6a6c3240b80317b2613340b80317b35c5d3240b80317b357593240b80317
b34d513240b80317b344493240b80317b23a3340b80317b331343240b803
17b32e423240b80317b3272c3240b80317b312253280b80317b30a0d32c0
4116031600d00316000200700316000102c4000f0101001f00a0031500b0
031500020306000f0101001f00400312b32426329fbf0304000103020301
0064001fffc00301b20d1132410a02ff02ef0012001f02ee02ed0064001f
ffc002edb30e11329f414a02e200af02e200bf02e2000302e202e202e102
e1007f02e00001001002e0003f02e0009f02e000bf02e000cf02e000ef02
e0000602e002e002df02df02de02de000f02dd002f02dd003f02dd005f02
dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc0001000002dc00
01001002dc003f02dc000202dc02dc001002db000102db02db000f02da00
0102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f25
32b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f9291fb802e3b3
202b1fa0413002d400b002d40002000002d4001002d4002002d4005002d4
006002d4007002d40006006002d6007002d6008002d6009002d600a002d6
00b002d60006000002d6001002d6002002ca002002cc002002d6003002d6
004002d6005002d6000802d0b2202b1fb802cfb226421f411602ce02c700
17001f02cd02c80017001f02cc02c60017001f02cb02c50017001f02c902
c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6001002c700
2f02c5000502c1b324121fff411102bf0001001f02bf002f02bf003f02bf
004f02bf005f02bf008f02bf000602bf0222b2641f12410b02bb00ca0800
001f02b200e90800001f02a600a20800406a1f4026434932402043493240
263a3d3240203a3d329f209f26024026969932402096993240268e923240
208e92324026848c324020848c3240267a813240207a813240266c763240
206c76324026646a324020646a3240265a5f3240205a5f3240264f543240
204f5432b8029eb724271f374f6b0120410f027700300277004002770050
0277000402770277027700f90400001f029bb22a2a1fb8029a402b292a1f
80ba0180bc0180520180a201806501807e01808101803c01805e01802b01
801c01801e0180400180bb0138000100800140b40180400180bb01380001
0080013940180180ca0180ad018073018026018025018024018020013740
b80221b2493340b80221b2453340b80221b341423240b80221b33d3e320f
410f0221003f0221007f0221000300bf022100cf022100ff022100030040
0221b320223240b80221b3191e3240b80222b32a3f3240b80221b32e3a32
6f414802c3007f02c3008f02c300df02c30004002f02c3006002c300cf02
c30003000f02c3003f02c3005f02c300c002c300ef02c300ff02c3000600
df02220001008f02220001000f0222002f0222003f0222005f0222007f02
2200ef0222000600bf022100ef02210002006f0221007f022100af022100
03002f0221003f0221004f0221000302c302c30222022202210221401d10
1c102b1048038f1c010f1e014f1eff1e023700161600000012110811b801
0db6f70df8f70d00094109028e028f001d001f0290028f001d001f028fb2
f91d1fb80198b226bb1f41150197001e0401001f013900260125001f0138
00730401001f0135001c0801001f0134001c02ab001f0132b21c561fb801
0fb2262c1fba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd7
20b80401b21fd51cb802abb61fd41c891fc92fb80801b21fbc26b80101b2
1fba20b80201b61fb91c381fadcab80401b21f8126b8019ab21f7e26b801
9ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e73b80401400f1f52
265a1f481c891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab21f35
1cb80401b61f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f231e
b80401b21f5537b80168402c07960758074f07360732072c0721071f071d
071b071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b013034b024b5342014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52
b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ffb101
018e851bb0124358b900010111858d1bb900010128858d5959001816763f
183f123e113946443e113946443e113946443e113946443e11394660443e
11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b
1db0964b5358b0aa1d59b0324b5358b0ff1d594bb09353205c58b901f201
f04544b901f101f045445958b9033e01f2455258b901f2033e4459594bb8
015653205c58b9002001f14544b9002601f145445958b9081e0020455258
b90020081e4459594bb8019a53205c58b9002501f24544b9002401f24544
5958b909090025455258b9002509094459594bb8040153205c58b1732445
44b1242445445958b917200073455258b9007317204459594bb804015320
5c58b1ca254544b1252545445958b9168000ca455258b900ca1680445959
4bb03e53205c58b11c1c4544b11e1c45445958b9011a001c455258b9001c
011a4459594bb05653205c58b11c1c4544b12f1c45445958b90189001c45
5258b9001c01894459594bb8030153205c58b11c1c4544b11c1c45445958
b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b01b33b59635c456523456023456560234560b08b766818b080622020b1
63594565234520b003266062636820b003266165b059236544b063234420
b13b5c4565234520b003266062636820b003266165b05c236544b03b2344
b1005c455458b15c406544b23b403b4523614459b3475034374565234560
23456560234560b089766818b080622020b134504565234520b003266062
636820b003266165b050236544b034234420b147374565234520b0032660
62636820b003266165b037236544b0472344b10037455458b137406544b2
4740474523614459004b5342014b5058b108004259435c58b108004259b3
020b0a124358601b2159421610703eb0124358b93b21187e1bba040001a8
000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b
59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b0112342002b74757375001845694445694445694473737373747573
74752b2b2b2b74752b2b2b2b2b7373737373737373737373737373737373
73737373737373732b2b2b45b0406144737400004bb02a534bb03f515a58
b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ffc0604459
004bb02e534bb03a515a58b1030345b040604459004bb02e534bb03c515a
58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b75
2b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b01e4b5402
b0124b545ab012435c5a58ba009f02220001007359002b7473012b01732b
2b2b2b2b2b2b2b737373732b002b2b2b2b2b2b0045694473456944734569
44737475456944734569444569444569447374456944456944732b2b2b2b
2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752bc700>
[4525 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N12/LGBEAB+ArialMT 1 TZ
%ADOBeginSubsetFont: LGBEAC+TimesNewRomanPS-ItalicMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (LGBEAC+TimesNewRomanPS-ItalicMT)
%%Title: (LGBEAC+TimesNewRomanPS-ItalicMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /LGBEAC+TimesNewRomanPS-ItalicMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-498 -307 1120 1023} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 950 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704AA398
8900AFCFF05DD> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /LGBEAC+TimesNewRomanPS-ItalicMT-Identity-H /Identity-H 0 [/LGBEAC+TimesNewRomanPS-ItalicMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N19 (LGBEAC+TimesNewRomanPS-ItalicMT-Identity-H)
/N19 (LGBEAC+TimesNewRomanPS-ItalicMT-Identity-H) /Identity-H [ (LGBEAC+TimesNewRomanPS-ItalicMT) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
%ADOBeginSubsetFont: LGBEBD+TimesNewRomanPS-ItalicMT Initial
ct_T42Dict begin
-0.496 -0.305 1.117 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /LGBEBD+TimesNewRomanPS-ItalicMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3274e59407000000cc000000566376
7420ff44a29700000124000007786670676d015abb920000089c000005cd
676c79664a53266000003c6c000005f068656164d0cba61300000e6c0000
0036686865610c7d077c00000ea400000024686d7478322d620200000ec8
00000ed86c6f63610014e3a000001da000000edc6d61787008e303e50000
2c7c000000206e616d6531be663500002c9c0000050b70726570791a47c3
000031a800000ac367646972000000000000000000000000000103370190
00050008059a0533002c0125059a0533004c03a000660212010502020503
05040509030400000a87000000000000000000000000544d432000010020
fffc058efe460133072101bb400001bfdff700009ec1058e0000054c001f
054c001c037100180000ffe10000ffe80000ffe8fe4afffc056b0023fe68
ffe2033e00000095000000950000000000000000002500a8008e010b007d
00820045003200a400ca006b0070005100af003c00f001d7004700040025
00770029004000fd00160161004601370029008e0017ffca0025005bffe9
02e600020099008100f2007500d6006300c60006009a01330024003800cc
003dff67001305d8003600860095ffdb0007043400a500d8ffdcfffe0048
00a200d8013c01530380053e0057007a007c008c0117012a0138017c0026
003c007800bd00c0021009b5000c004d004e00540058006700b404010002
0005005000af01d5034300240058008b013501c0ffac002000250026002d
00410136022bffba001e002a0034003b003f00850094009800d7012e013d
033104b900170040006100b9010e0116012201bfff9c001f001f004d005c
0086008c009600aa00cb00cb011f0154022f036005a9fee8000e006f007c
007d008b00d500f1010a0157017802b803adfe3fff6affb3ffc4001f0037
003f0044004a0078007d009700a200a700b600c000c100c600d8011d0150
019701ee04740532fd81fed1fee0ff16fff1000f002d00550068006e007f
00890095009e00c200da00e400f801040108011101c2023002da030e049e
0517ff00ff8700000020002f00410057007800870088008800b900c200c5
012001280133017401d6020e020f026c027e02ab02ec038903b103e304e7
ff43ffa8ffc3ffdcffe9000700230023002600520077007d0081008f0099
00ac00ae00b500b800c800ea00f000f40135016a018b01b101b501f70214
02ad02d504fc05d805f0ff9dfffc000b00240025002c0030003000330040
004700490057006e009a00bd00c900cd00dc00fa00fa011b0139017e0187
018a018e0195019601df01f6028602cf02de039603a903b003c804010432
046a058b05e006510761fe96fe9aff4bff870013002500340038003e004a
0065006b0073007a009c00a200b200b700bf00f000f700fb010401130120
0124013b01520178017c0181018f01a001d90248026a026f02700301031d
032303270388041f04ab04d104da057a058bfe26fe59ff2e00010002000a
003b003b004700580058005f0066006b007a007a008b009900af00bc00c0
00c700cc00e900f200f500fb00fb0102010a010b01150121012701450145
015501570158015e01610168017d01a301ab01da01ee021002180222028f
029402a302d202e703710393039b03b303d303fe04ff050b05320532054b
0559058b05ab05f2065506890742076207a708ccfd2afdc8fddefe0cfe15
fe27fe53fe84febbff58ff76ff77ffa1ffa7ffadffafffc0000000000003
0094001d001f002000200027002e0048004b004c005e005f006b0071007c
008a00900091009100a700af00b300b400c400c600d100d200de00df00df
00e600e800ea00eb00f200f500f500fc010201180123013101330137015c
016201660170017a017a017a018201980199019b01b001bf01c001ca01d3
01d701d801e001e001f601f701f802120213022f023702440247024f0252
026302650270027f0298029b02a602b702ba02c502cf02d602d702e502fe
031c031d03450348035d035e03710379038103a103b703d403d503d803e1
03f803fe0404041f042104230425043a0467048304e00528054b0564056a
059f059f05c2060b066a06af06b306cb06e8070607280748075007a607b2
07ff009500af00920096000000000000000000000000017e01a80129025b
0212020301c302b4019301cd02b204ed020e0159017a0300022d042c00c8
004d00e602890325013e0378011b00f1018d00490203007c000e029d0247
0024000000000052004400330038005405d3041501a70000028601680050
00cf0002004b0024008800ba0025ffd800110091ff6b00b5011700260065
ff9900490080014b01c000f40167027102ea04fc0310017c01e103d90155
01e601ee0434019606cb005c022b0099003d009f00160039002700de0079
0120022e005a00990388009400210019002a046c05e8000001f203b200aa
0296028902b4ffc9020000ec0005005a0447010004e00000052a001f01eb
00ae016800ca02d3028901b5040601a1014f014b011c0308005e00c70024
029d006503750104028002f304d800d90239025a032c01f2043103030050
02e50283005901eb010800ac019602f8012100950180004400e501eb02e5
007400f301ff02fd038f026801c801c70116022b0142033000fe02e10162
0200002400ee05170108023700660006010201e602aa0366019b00d305c2
03dc044d03b6000401be013702fc03200244014d0338ffed002506f8030d
fed5ff43004402ffff92040bfdef0155017100d9ffc4032d0461044afbb5
fbcf02170192036d0558fff2fe7d0583023e006605e9073d007902430025
00cf00fd00af002a01ef021a0026001f0025003a000001170490fbfb0251
001d02f001f50078018f005f00240044005400bf00af006701a800260005
0006003f009800fa02ab00c2004d0375004a00b600c401bf017c006f0013
0263000c006801520002012e0104001f001f009a000000f1046900790080
005000bd056b00ab0080001e05a5404154403f3e3d3c3b3a393837353433
3231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615
14131211100f0e0d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00
b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a2344
45b01923442d2c2045b00325456164b050515845441b2121592d2cb00143
632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a
2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0
0361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2c
b01243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a
8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2c
b0022546608a46b040618c482d2c01182f2d2c20b0032545b019234445b0
1a23444565234520b00325606a20b009234223688a6a606120b01a8ab000
527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb11400
8a5279b31940201945208a54582321b03f1b235961442d2cb11011432343
0b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d
2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b212159
2d2c0120b003252349b04060b0206320b000525823b002253823b0022565
38008a63381b212121212159012d2c4bb06451584569b00943608a103a1b
212121592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b0
06430b2d2c3eb02a2a2d2c352d2c76b802ee23701020b802ee4520b00050
58b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c64
23648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb8
1555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb4
000100000015b00826b00826b00826b008260f10161345683ab001162d2c
b4000100000015b00826b00826b00826b008260f1016134568653ab00116
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb013
4358031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121
592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b01060482046b0106048590a21211b2121592d2cb012435c
580cb00425b00425060c6423646164b807085158b00425b00425012046b8
fff060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a
2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab0
12435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab01243
5c5a58381b2121592d2c462346608a8a462320468a608a61b8ff80622320
10238ab903b003b08a70456020b0005058b00161b8ffba8b1bb0468c59b0
106068013a2d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
59b12401885458b2022002436042004b014b5258b2020802436042591bb9
40000080885458b202040243604259b94000008063b80100885458b20208
0243604259b94000010063b80200885458b2021002436042595959592d00
00000001000000030f5c37bdc8695f0f3cf50819080000000000a31fb8bd
00000000c180933ffc05fd8c08f608300000000900010001000017c10001
00000721fe450057086bfc05fcfe08f60018000700000000000000000000
000003b60639011c00000000020000000200000002aa009a035c01260400
00930400005606aa00900639006201b6010d02aa008c02aaff2104000122
056600be0200ffeb02aa0036020000450239ffbb0400007a0400007d0400
002004000044040000400400004904000081040000e80400004e0400003b
02aa007a02aa002405660096056600c805660096040000c6075c006104e3
ff9c04e3ffd10556008a05c7ffc304e3ffd204e3ffce05c7008e05c7ffca
02aaffc0038dffba0556ffc90473ffbe06aaffbd0556ffc705c7007a04e3
ffcf05c7006104e3ffd10400000e0473008f05c700da04e3010006aa00f9
04e3ff77047300b80473fffc031d000d023900da031dff33036000380400
ffef02aa01680400003004000036038d003804000027038d00400239fe9b
0400ffc904000029023900580239fea0038d00140239004f05c700230400
00270400003c0400ff1e0400002d031d002a031dffed023900540400003c
038d002c05560023038dffb8038dff5c031dffc70333008d023300ed0333
ff670454001404e3ff9c04e3ff9e0556008a04e3ffd20556ffc705c7007a
05c700da040000300400003004000030040000300400003004000030038d
003c038d0040038d0040038d0040038d0040023900580239005802390058
02390058040000270400003c0400003c0400003c0400003c0400003c0400
003c0400003c0400003c0400003c040000dd033300d40400007204000031
0400fffc02cd00ad042f006c0400feb70614008b0614008b07d700be02aa
019902aa010c04640019071dff9405c7004805b40035046400350464005e
0464005a0400fff2049cffd203f4004005b4002b06960092046400480231
0000023500b2027b00e40625005b0556002d0400000504000049031d0090
0566009604640054040000020464001e04e5ffc40400005404000025071d
010a04e3ff9c04e3ff9c05c7007a078d002d055600360400ffee071dffed
0473018a0473017502aa01b202aa01910464003503f4002f038dff600473
00b70156feab0400001102aa007402aa002e0400fe7d0400fe7d0400ffe3
0200009102aa00410473001e0800007f04e3ff9c04e3ffd204e3ff9c04e3
ffd204e3ffd202aaffc002aaffc002aaffc002aaffc005c7007a05c7007a
05c7007a05c700da05c700da05c700da0239005802aa00fe02aa00c602aa
00f602aa012602aa01c102aa017d02aaffdb02aa012f02aa004e02aa0152
0473ffc6023900330400000e031dfff00473fffc031dffad023300ed05c7
ffd004000037047300b7038dff6004e3ffcf0400ff1e056600960566017a
026600a30266006f02660084060000a1060000a1060000820400ffce05c7
008e0400ffc902aaffc00400000e031dffed0556008a038d003c0556008a
038d003c04000027040000c502ab01ee04e3ff9c0400003004e3ff9c0400
003005c7ffc304de002705c7ffd004e3ffd2038d004004e3ffd2038d0040
0473ffbe0239004f0473ffbe02e9004e0473ffbe029500490556ffc70400
00270556ffc70400002705c7007a0400003c04e3ffd1031d002604e3ffd1
031d00260400000e031dffed0473008f0239ffdd0473008f02e9005605c7
00da0400003c05c700da0400003c0473fffc031dffc30473fffc031dffc3
048dffb605c7007d0617009d0433003c03b800300327001603f2003602dd
0033046d004a0400ffef0495009a0285001407eb002f0800004f04000099
0800004f040000990800004f040000980400009807d5016a05c700c00566
00c604cd00990566009804d5022204d5010505abffe904ed01c005ab027e
05abffe905ab027e05abffe905ab027e05abffe905abffe905abffe905ab
ffe905abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
027e05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff
04d500920800000007eb013007eb012007eb013007eb012004d500b204d5
008004d5002a082b0198086b01b807550010060000f40600006f0440003a
0540003704c0003f0415004004000025060000550600ffc30401004b049e
007301c0010d0355012606ab006c0355001e04d5009202d6008302d60083
04d500b202d6007004e3ff9c040000300556008a038d003a0556008a038d
003a04e3ffd2038d004004e3ffd2038d004004e3ffd2038d004005c7008e
0400ffc905c7008e0400ffc905c7008e0400ffc805c7ffca0400002905c7
ffca0400002902aaffc00239005402aaffc00239005802aaffc002390054
02aaffc0023a0034038dffba0239fea00556ffc9038d0014038d00140473
ffbe0239ffa20556ffc7040000270592ffc003db002705c7007a0400003c
05c7007a0400003c04e3ffd1031dfff90400000e031dffed04730093023a
003105c700da0400003c05c700da0400003c05c700da0400003c05c700de
0400003c06aa00f905560023047300b8038dff5e0239fe9d04e3ffa50400
0030071dff940556002d05c700480400000502aa014d06aa00f905560023
06aa00f90556002306aa00f905560023047300b8038dff5e02aa01bd02aa
00b70400003104cd005a060000a10600008206000084060000e802aa004c
02aaffdb02aa019902aa00b404e3ff9c056f005d065600590337004d05c7
007a0548005e05cf00200239005404e3ff9c04e3ffd104b2ffa704e3ffd2
0473fffc05c7ffca02aaffc00556ffc904d5ff8f06aaffbd0556ffc7051d
fff205c7007a05c7ffc504e3ffcf04c1ffb90473008f047300b804e3ff77
05a0011305c9001b02aaffc0047300bc0433003c0327001603f8003a0239
005503ac003503fcff7703270031033d002f03f8003a03ee005a02390055
03d7001f0377ffc00404ff94038d002c036d00250400003c03d7ff6f033f
003f03ac00350385ff4004f8008f05a600480239005503ac00350400003c
03ac00350595003f04e3ffce066000c1048dffb6055a008e0400000e02aa
ffc002aaffc0038dffba076bffbb075effc2066400c60550ffc7056200e1
05c7ffcd04e3ff9c04b8ffc604e3ffd1048dffb60517ff2d04e3ffd20754
ff9003f6fffe05c7ffcc05c7ffcc0550ffc7056bffb906aaffbd05c7ffca
05c7007a05c7ffc504e3ffcf0556008a0473008f056200e1066f009504e3
ff7705c7ffcc058300e70858ffe40858ffe40568007606faffc604b8ffc6
053d001e0842ffbe0542ff9104000030040600490379003f031f0002040c
003d038d00400771ffff031fffce0400003c0400003c03be0025037dffa5
051bffa403f800290400003c040000270400ff1e038d003805c70023038d
ff5c05ae003c038dffb80400003c03d10056060a0040060a00400427003c
056b006603a400660387000f05a4002a03b8ff84038d003c03d500280304
ffaa037d0036031dffed02390058023900550239fea0056fffa605b2002a
0400002903be0025038dff5c040000250385ffc30285005608000041078b
ffa80402003202aa003502aaff4f02aaff6502aaff4502aa003502aaffc2
02aaffc202aaffc302aaffc302aa01cf02aaff4f02aa010202aa005402f7
00ed02aa015c02aa005f02be037c02be003702aa007a03d3ffd5037fffc5
0291ff7e035700bd03ceffd1021c00bf0208002903c4fffa03d3005901ef
00c6038000c10349ffc7037000c703c8ffe403c3ffde020b004a023cff9d
03b1006b0383ffcd0372004f036effd5039000c50397fff0038eff8f0395
00bc04f500c203cbff85043800bf040b00c603de00c60186009b02f1009b
064c0010021c0041038000c10380008f03700016037000160383ffd104f5
00c204f500c204f500c204f500c203d3ffd503d3ffd503d3ffd5037fffc5
0291ff7e035700bd03ceffd1021c00620225000c03d3005901ef005a0380
00c10349ffc7037000c703c3ffde023cff9d03b1006b0372004f036effd5
0397fff0038eff8f038e009d04f500c203cbff85021c00bf037fffc50349
ffc7036effd50448004a0000ffdc0000ff250000ffdc0000fe510400005a
0800000005c7007a0445003c060800da045d003c0000ff1a0000fdf20000
fdb40000ff910000fef60000fee40000ff780000ff8a0000fe880000fefb
0000fea20000fe6e0000fdf4000000350000001f0000fe47041a00780600
00a10600006f0000ff2b0000fe6c0000fe8a0000fdd20000ff1e0000fe38
0000fdcd0000fd190000fce70000fd710000fd3f0000fcf90000fccd0000
fc050000fc050000fc550000fc0f0000ff190000ffa20000fe310000fc55
0000fcef0000fd9c0000fdda0000fca10000fd530000fcef0000fcb30000
fd0d0000fcb30000fdba0000fd940000fd7e0000fd300239005804e3ff9c
0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3
ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c04000030
04e3ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c0400
003004e3ffd2038d004004e3ffd2038d004004e3ffd2038d004004e3ffd2
038d004004e3ffd2038d004004e3ffd2038d004004e3ffd2038d004004e3
ffd2038d004002aaffc00239005802aaffc00239003105c7007a0400003c
05c7007a0400003c05c7007a0400003c05c7007a0400003c05c7007a0400
003c05c7007a0400003c05c7007a0400003c05c7007a0445003c05c7007a
0445003c05c7007a0445003c05c7007a0445003c05c7007a0445003c05c7
00da0400003c05c700da0400003c060800da045d003c060800da045d003c
060800da045d003c060800da045d003c060800da045d003c047300b8038d
ff5c047300b8038dff5c047300b8038dff5c04e3ff9c0400003002aaffc0
0239005805c7007a0400003c05c700da0400003c05c700da0400003c05c7
00da0400003c05c700da0400003c05c700da0400003c000000be000000be
000000be000000be048dffb6031f00020754ff900771ffff0550ffc703be
00250550ffc703be002505c7ffca03f80029047300b804000003047300b8
0400ffdf04e3ff77038dffb8058300e703d100560583ffca04000029058f
007a038d001b05c7007a0400003c01ef00b0000000000336000003de0078
05c7ffcc0400003c0400000e031dffed0473008f0239ffd1000000000000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000e80000017000000170000001700000
01e4000001e4000001e4000001e4000001e4000001e4000001e4000001e4
000001e4000001e4000001e4000001e4000001e4000001e4000001e40000
01e4000001e4000001e4000001e4000001e4000001e4000001e4000001e4
000001e4000001e4000001e4000001e4000001e4000001e4000001e40000
01e4000001e4000001e4000001e4000001e4000001e4000001e4000003bc
000003bc000003bc000003bc000003bc000003bc000003bc000003bc0000
03bc000003bc000003bc000003bc000003bc000003bc000003bc000003bc
000003bc000003bc000003bc000003bc000003bc000003bc000003bc0000
03bc000003bc000003bc000003bc000003bc000003bc000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f0000005f0000005f0000005f0
000005f0000005f0000005f0000005f0000005f0000005f0000005f00000
05f0000005f0000005f0000005f0000005f00001000003b600f2003c0068
000500020010002f0055000004830258000300020000000e00ae00000003
00000000006a0000000000030000000700ce006a00010000000000000035
01380001000000000003001f016d0001000000000004001f018c00010000
00000006001f01ab0001000000000007006701ca0003000104090000006a
02310003000104090001002c029b0003000104090002000e02c700030001
04090003003e02d50003000104090004003e03130003000104090006003e
0351000300010409000700ce038f00a90020003200300030003600200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e002e00200041006c006c00200052
00690067006800740073002000520065007300650072007600650064002e
00540069006d006500730020004e0065007700200052006f006d0061006e
00200069007300200061002000740072006100640065006d00610072006b
0020006f006600200054006800650020004d006f006e006f007400790070
006500200043006f00720070006f0072006100740069006f006e00200069
006e002000740068006500200055006e0069007400650064002000530074
006100740065007300200061006e0064002f006f00720020006f00740068
0065007200200063006f0075006e00740072006900650073002ea9203230
303620546865204d6f6e6f7479706520436f72706f726174696f6e2e2041
6c6c205269676874732052657365727665642e4c47424542442b54696d65
734e6577526f6d616e50532d4974616c69634d544c47424542442b54696d
65734e6577526f6d616e50532d4974616c69634d544c47424542442b5469
6d65734e6577526f6d616e50532d4974616c69634d5454696d6573204e65
7720526f6d616e20697320612074726164656d61726b206f662054686520
4d6f6e6f7479706520436f72706f726174696f6e20696e2074686520556e
697465642053746174657320616e642f6f72206f7468657220636f756e74
726965732e00a90020003200300030003600200054006800650020004d00
6f006e006f007400790070006500200043006f00720070006f0072006100
740069006f006e002e00200041006c006c00200052006900670068007400
73002000520065007300650072007600650064002e004c00470042004500
420044002b00540069006d00650073004e006500770052006f006d006100
6e005000530052006500670075006c00610072004c004700420045004200
44002b00540069006d00650073004e006500770052006f006d0061006e00
500053002d004900740061006c00690063004d0054004c00470042004500
420044002b00540069006d00650073004e006500770052006f006d006100
6e00500053002d004900740061006c00690063004d0054004c0047004200
4500420044002b00540069006d00650073004e006500770052006f006d00
61006e00500053002d004900740061006c00690063004d00540054006900
6d006500730020004e0065007700200052006f006d0061006e0020006900
7300200061002000740072006100640065006d00610072006b0020006f00
6600200054006800650020004d006f006e006f0074007900700065002000
43006f00720070006f0072006100740069006f006e00200069006e002000
740068006500200055006e00690074006500640020005300740061007400
65007300200061006e0064002f006f00720020006f007400680065007200
200063006f0075006e00740072006900650073002e00ba0054ffc003bbb3
45453240b803bbb32b2e3240b803bbb2282932b9ffc003bbb31a26328041
1303bb009f03bb00af03bb00cf03bb0004000003bb001f03bb000203bb02
af0027001fffc003b9b2161b32b9ffc003b8b2424232b9ffc003b8b23638
32b9ffc003b8b32a2d32df410a03b800ef03b8000203b803b90028001fff
c003b9b3282e32f0410b03b90001000003b7000103b700030800001f03b6
0381b23a1f0f411703b3001003b2002003b2005003b2007003b200e003b2
000600cf03b300df03b300ef03b300ff03b30004001203a8b2e2891fbe03
9f016b019a001f039800930801400c1f7f047f05027f027f03025fbb02b0
0001ffc00117b2196632b8ffc0b3651a6632b9ff800173b2196632bd0384
01170800001fffc002afb2313340b802afb22e3340b802afb328293240b8
02afb326273240b802afb321253240b802afb31c203240b802afb2233340
b802afb21933a0bc02af00b002af00e002afb5034003212932b8fff2b33a
263d32bc038203820382003a0800b51f40255c331eb80381b25c6432b8ff
eeb3252e3314b80381b32b2e3269be03810001008a03810001000e0381b3
2b2f3210b80381b3515b320cb80381b34e513222b80381b3474d320eb803
81b246330ab80381400926473212254358320cb80381b2323310b80381b2
2a3312b80381b3373d3212bb0381003d0033fff44015253d331825355b32
102526343206252a330c252e33b8fffe4024252d330c3a2f33329925aa25
ba25c92504052536330c25323832193a293a383a03182517b80381b42825
382504bc0381038103810025080040101f0f1f2b2e32691f781f020b1f30
3332b8fff1b31f263d32bc038003800380001f080040151f375f07af0702
5f06af060222ac2b2e3209ac2f33b8ffdc400aac1f223222232b52320eb8
037fb229330eb8037fb2223314b8037fb21e2032b8ffe7b71e2b33321e2b
2f32b9ffc0037fb64c4f3232262c33410affee037f00390033fff8037f00
2b0033ffea037fb23a3320b8037fb33f46321eb8037fb32f3a3212b8037f
b22e331eb8037fb32a2d320eb8037fb2263304b8037fb3494a3404b8037f
b2463304b8037fb2213318b8037f400c1d3322263032322226333832b8ff
f8400a262b2f3209261b21328abe037f0001037f037f037f00260800402e
1f371f062f063f06039f02af02bf02cf02049f03af03bf03cf03046f037f
038f03031f032f033f034f035f03050f413502ed0001005f02ed009f02ed
00df02ed0003002f02ed003f02ed006f02ed000300af02af0001004f02af
009f02af0002002f02af003f02af0002003f02b00001004f02af005f02af
0002002f02af003f02af0002007003b2000103b203b202ed02ed02b002b0
02af02af401a370100300140010201010009010200080017170000001211
0840410b027b02230034000d013d0034000d01370034000d011b401a340d
8f340d84340d68340d59340d54340d48340d2c340d28340d411002350020
000d021b0020000d01fc0020000d01c30020000d01500020000d012c401a
200df0200dbe200d94200d79200d6a200d61200d5f200d44200d410d013e
0138000d003d0138000d00300138000d001d0138000d01fdb40f4d0f0009
bf01fd004d000d03b1037f0015001f0215b226341fb80214b2263f1fb802
08b21ebb1f41190206001e0801001f0205001f02ab001f0204001f02ab00
1f0203001f0401001f02010031019a001f01fb00230156001f01aeb2262a
1fb801adb2262a1fb801abb226341f411501a8002602ab001f01a5001e01
25001f01a400ab02ab001f01a2003102ab001f01a1003102ab001f019db2
236c1fb8019cb2236c1f4109019b00230401001f019a0033019a001f0176
b2262e1fb8016cb231721f4111016b0023019a001f016800240401001f01
4500260801001f013f00230401001f0123b21e9e1fbc0121001e0201001f
0100b426791ffd1fb80125b21ffa33b80801b21ff924b802abb21fe826b8
0101b21fe51fb8019ab21fe431b80101400b1fe331e41fe231891fd226b8
0201b61fd026cd1fcd25b80401b21fb731b8019ab21fae26b80801b21fac
1eb80401400b1f9e315e1f97269e1f9333b80801b21f8a24b8019ab21f83
1fb802ab40131f82236c1f7523e41f7026cd1f6423721f5e25b80401b21f
5d23b802abb21f55e6b80401b21f5324b80201b21f4f33b802abb21f4e26
b8040140131f4731671f4626ab1f4331cd1f3e235e1f3a1fb80401b61f39
24e41f3723b80801b21f2e23b80401b21f2a1eb80125400b1f2923ab1f27
31ab1f5537bc01c60007018a0007012b402e077f077107690766074b0740
07380736072d07220721071408120810080e080c080a0808080608040802
08000814b8ffe0402b000001001406100000010006040000010004100000
01001002000001000200000001000002010802004a00b013034b024b5342
b0372b4bb807ff52b0382b4bb009505b58b101018e59014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b544218b0382bb00288b8
01005458b801ffb101018e851bb0124358b900010140858d1bb900010159
858d59590016763f183f123e113946443e113946443e113946443e113946
443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d59
4bb04753205c58b9027d027b4544b9027c027b45445958b90146027d4552
58b9027d01464459594bb04753205c58b9001e027c4544b90026027c4544
5958b9017f001e455258b9001e017f4459594bb05e53205c58b9001f027d
4544b90025027d45445958b901a8001f455258b9001f01a84459594bb801
0153205c58b1ab1f4544b11f1f45445958b9047000ab455258b900ab0470
4459594bb8012553205c58b1e61f4544b11f1f45445958b9051000e64552
58b900e605104459594bb01753205c58b124244544b1312445445958b122
24455258b124224459594bb05153205c58b124244544b1232445445958b1
7d24455258b1247d4459594bb06e53205c58b124244544b1332445445958
b1aa24455258b124aa4459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b4569
5342014b5058b108004259435c58b1080042591610703eb0124358b911b5
3d801bba011c03d9000b2b59b00a2342b00b2342003f3f182b103c012f5d
060cb0062342b0072342b0124358b93b21187e1bba040001a8000b2b59b0
0c2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342
b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b01123
42002b4bb02e5358b8016b45b02a60b8016b234459001845694445694418
4569444569447373737375757573737475757575752b4bb026534bb03d51
5a58b1262645b0196044592b45186944742b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b004bb02a534bb03f515a58b1070745b0
4060445973732b2b451869442b2b752b2b4518694475752b2b752b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b2b2b451869442b002b732b
2b2b2b2b2b2b2b2b012b2b2b007373732b2b2b01435c58b8ffdeb31e1c33
18b8037fb52b3318262b33b9fff00381b112332b2b2b2b590173742b002b
73752b2b732b2b2b2b2b73752b2b2b2b2b0300>
[1521 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N20/LGBEBD+TimesNewRomanPS-ItalicMT 1 TZ
65.947861 426.916473 465.514236 353.014984 re
W
n
n
59.52 428.600006 475.920002 353.879974 re
1.0 sg
f
0.0  sg
117.179443 436.640289 m
%ADOBeginSubsetFont: LGBDPB+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
/LGBDPB+ArialMT 6 GetGlyphDirectory
588 <001C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A5
95D3927> |
616 <001C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90
A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C8
46C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9A
D79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC0
99F518C54BB58C51D6FB6D0C8> |
625 <001C60D8A8C9B7B202F1AB1859373449A1BBFC169A31F4D42230B17158A
D3B27F08B7A2E6984B345EF16DCC4A604C984EDDD7CDBBAE9233A67A7407BC16
DC7B3BA307AE84602E6D6A58E3809C59FF1EEB782E7AE9BE19B3E> |
615 <001C60D8A8C9B7931DBD42E44F8D86F10EAFDA2717845C2165D0907236F
85F8B03575BBA6B0E0E8FFEF6> |
602 <001C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1E
A7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D88
3CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87D
BBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE240
5FD710F7ADB95B4F576668A6DB104942C88ED8C339BD78AF728DB2916FC74DD7
4C79942CE092A68BDC296553CDE10F01A05D2DEAC7F72D8B1533BA9F1804E12A
7AC722A8F562956D5A9884DE76BDFFB0920754E5122C8F7DA6A7FA5CADB2CD19
1F5FF4EBD935D2603160BD9773627504BFDEC8A7B64E9DDD2D336730FA67FFE0
A40AC25E3> |
633 <001C60D8A8C9B79D2DA8152DC6FDE645337ABC4A1387F68B805DD6C396D
032DA0192005924C0B2E3BC11AE41F1DBB84D83A49AC641B97F3755FE9C18F15
65F98EB8A19E0B8DA4E61A8AA7E90D997317D4908EEF798163FAB07D9468EBDB
993115A28ADFBF21C1D1C4E76ECA4B1A25FA670C314DFC3F749ED300B528A> |
!
end
end end
%ADOEndSubsetFont
/N11 [18.2229 0.0 0.0 19.197403 0.0 0.0] Tf
(\002L\002h\002q\002g\002Z\002y)
[9.344742 9.417594 9.341127 9.355586 9.417594 8.087358 ] pdfxs
178.85849 436.640289 m
%ADOBeginSubsetFont: LGBDPB+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
/LGBDPB+ArialMT 5 GetGlyphDirectory
622 <001C60D8A8C9B6AA0CA5AAFC8A1ADA6F40008A8DEF2E77F6490D6997576
724DD414867C8D7E6F7D1CBA2E468574A07C780003288A36A423C40498FFB9A6
09B8871AA056FAAF15B869FD49140137E0D4D47D49A592A89C02150DDF422F0A
2BEFE8875325D1A2EC4B04C5285CD5E5902C927394688FFE60BBC2B3EDC2910F
8F5B0A9A98EE7DD531476FFEC84E74C36607A55A40EE428F259486C53F7CC1D7
0104FAB60C4AA0AC9B26C08850E68E92FBBDC7D75616837598A260D7D5E24419
9E8DF41803CCBCE846B6C2DA6A275EB669CB2AFB8ABE755F795E9B822C6D0B52
3F666585A8B84C959CFD32E659958751C5F782608C28ABA6C259CD764C04732D
53EB63F1955A4808B10> |
618 <001C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B
96470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F4363
30DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F
556CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A4967
2C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B
9> |
614 <001C60D8A8C9B625CE43345E52FC24A8F8C54F03BFFB4B3D2B049ECE036
608096B63AB857EC94D984349031432038316BF414AAAB6C1> |
621 <001C60D8A8C9B7A73DB92EFAEC912AA9CB61EA2C87B96577B4D13A11140
AAA18C6E226D96ACA3DE3B427B0A298EF106E8BC0FCA1DC8D81AF2F08A42A0F5
836B6230FDF576E37CE129EFF9730F23EC10CF5ACA4D4CA70309E71B89A944CA
7348AEBF55FF5ADA9F61B4BA14C9A2301A8C53EBFBE665E1DC22E> |
613 <001C60D8A8C9B7F44ACC903D2A77B9AA55B32043F6C06897CB764A5FE61
53579ECE80A6853AB2EC574BE337C1BBC18A1F95F9DE4367C0130C0EA57B0C83
7AFF6237123F89C02FBF351F0246672F95A43C603895E25DB> |
!
end
end end
%ADOEndSubsetFont
(\002n\002h\002j\002f\002m\002e\002Z)
[12.047201 9.357533 9.357533 12.110877 9.359201 9.350025 9.357533 ] pdfxs
1 J
1 j
5.362 w
n
70.200005 443.359985 m
101.040001 443.359985 l
1.0 0.6902 0.0 setrgbcolor
S
0.0 sg
353.099304 436.640289 m
%ADOBeginSubsetFont: LGBDPB+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
/LGBDPB+ArialMT 4 GetGlyphDirectory
582 <001C60D8A8C9B6B41CBB4B6664BFFC865F56E6FEAFA79E7B90883C1C68A
FB379AC174B0F8DCC9294E2C26BD06BBA9FD3867F8768651EF4BA798B4F538FC
E8F80AF5A83421F8F> |
607 <001C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E244
9B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0
C8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0
EEA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C3
7295284C077711C162623860AACA404F650F8D516970257> |
620 <001C60D8A8C9B771A89C878BA37B0F7E0D7FE33389976EC36B5C04E0D82
D31B013DD> |
606 <001C60D8A8C9B7F44A8235D278DE6E1C8B61BD197AAF08C43470C17519B
775AC2CA8F8AE684C43777E8DA8461965864E71F7333D052AF8AF3F0C493AE36
E113B1D33B943A35D921787> |
!
end
end end
%ADOEndSubsetFont
(\002F\002_\002l\002h\002^)
[14.760505 9.357533 6.720417 9.417594 10.20478 ] pdfxs
409.439056 436.640289 m
(\002F\002h\002g\002l\002_)
[14.700166 9.417594 9.355586 6.720417 9.652554 ] pdfxs
458.999878 436.640289 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
1 42 16 <0001004101b8026a026d0003002c401970027003024d014d020201230002
1a05700001001904708d182b4e10e45d10e6002f4ded31300071015d1335
211541022901b8b5b500>LGBEAB+ArialMT AddT42Char 
1 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>LGBEAB+ArialMT AddT42Char 
LGBEAB+ArialMT /CharStrings get begin
/hyphen 16 def
end
LGBEAB+ArialMT /Encoding get
dup 45 /hyphen put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N12 [18.2229 0.0 0.0 19.197403 0.0 0.0] Tf
(-) show
464.399323 436.640289 m
%ADOBeginSubsetFont: LGBDPB+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
/LGBDPB+ArialMT 1 GetGlyphDirectory
580 <001C60D8A8C9B7F44AE196A1ADD9B9AA17F780E6BBF5C2F3ED848960E0C
D86701E0C1150E5D7830E61DE3E372619FC5C108D008F8DD777EEADB4F7006F0
B431FA97E0B4A97499FB77EFDAAE17C0E77F0C7B4803747CC90E8C1F3E44E491
A719FC1E95E3BB0506AC11FB0C566BD0A6C6B316494F539F56842C8D2F4A3F17
929E2A39DC15AD25207DD0A7488BA3A3337> |
!
end
end end
%ADOEndSubsetFont
/N11 [18.2229 0.0 0.0 19.197403 0.0 0.0] Tf
(\002D\002Z\002j\002e\002h)
[10.729755 9.357533 9.357533 9.410086 9.357533 ] pdfxs
2.681 w
n
306.179993 443.359985 m
337.019989 443.359985 l
0.0 0.0 1.0 setrgbcolor
S
1.34 w
n
119.82 509.059998 m
523.320007 509.059998 l
0.87843 sg
S
n
523.380005 508.940002 0.059998 0.060028 re
f
n
119.82 534.5 m
523.320007 534.5 l
S
n
523.380005 534.440002 0.059998 0.059998 re
f
n
119.82 558.679993 m
523.320007 558.679993 l
S
n
523.380005 558.559998 0.059998 0.060059 re
f
n
119.82 582.799988 m
523.320007 582.799988 l
S
n
523.380005 582.679993 0.059998 0.060059 re
f
n
119.82 606.919983 m
523.320007 606.919983 l
S
n
523.380005 606.799988 0.059998 0.060059 re
f
n
119.82 631.039978 m
523.320007 631.039978 l
S
n
523.380005 630.919983 0.059998 0.060059 re
f
n
119.82 655.159973 m
523.320007 655.159973 l
S
n
523.380005 655.100037 0.059998 0.059998 re
f
n
119.82 679.279968 m
523.320007 679.279968 l
S
n
523.380005 679.219971 0.059998 0.059937 re
f
n
119.82 703.400024 m
523.320007 703.400024 l
S
n
523.380005 703.339966 0.059998 0.059937 re
f
n
119.82 728.900024 m
523.320007 728.900024 l
S
n
523.380005 728.779968 0.059998 0.060059 re
f
n
164.039993 740.959961 m
164.039993 507.73999 l
S
n
164.100006 507.619995 0.059998 0.059998 re
f
n
214.979996 740.959961 m
214.979996 507.73999 l
S
n
215.039993 507.619995 0.059998 0.059998 re
f
n
265.919983 740.959961 m
265.919983 507.73999 l
S
n
265.97998 507.619995 0.059998 0.059998 re
f
n
316.919983 740.959961 m
316.919983 507.73999 l
S
n
316.919983 507.619995 0.059998 0.059998 re
f
n
367.859985 740.959961 m
367.859985 507.73999 l
S
n
367.859985 507.619995 0.059998 0.059998 re
f
n
417.419983 740.959961 m
417.419983 507.73999 l
S
n
417.47998 507.619995 0.059998 0.059998 re
f
n
468.359985 740.959961 m
468.359985 507.73999 l
S
n
468.419983 507.619995 0.059998 0.059998 re
f
n
519.299988 740.959961 m
519.299988 507.73999 l
S
n
519.359985 507.619995 0.059937 0.059998 re
f
n
119.82 491.600006 m
119.82 491.600006 403.500008 4.079987 re
123.839996 491.600006 m
123.839996 495.679993 l
0.0  sg
S
n
123.870003 495.559998 m
123.870003 495.619995 l
0.060013 w
0 J
S
1.34 w
1 J
n
134.580002 491.600006 m
134.580002 495.679993 l
S
n
134.610001 495.559998 m
134.610001 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
143.940002 491.600006 m
143.940002 495.679993 l
S
n
144.029999 495.559998 m
144.029999 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
154.679993 491.600006 m
154.679993 495.679993 l
S
n
154.709991 495.559998 m
154.709991 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
174.779999 491.600006 m
174.779999 495.679993 l
S
n
174.869995 495.559998 m
174.869995 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
184.139999 491.600006 m
184.139999 495.679993 l
S
n
184.229996 495.559998 m
184.229996 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
194.87999 491.600006 m
194.87999 495.679993 l
S
n
194.970001 495.559998 m
194.970001 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
204.300003 491.600006 m
204.300003 495.679993 l
S
n
204.330002 495.559998 m
204.330002 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
164.039993 487.579987 m
164.039993 498.319977 l
S
n
164.130005 498.259979 m
164.130005 498.319977 l
0.059998 w
0 J
S
1.34 w
1 J
160.080002 469.700287 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
1 2216 24 <00010055ffe7042105a6001e0156b10202435458b90001ffc0400d0d0d02
55011c0e0a1e15151c12b802bb400b0f04041e1c0d0e01000718b8ffeab4
0f0f025518b8ffeab40d0d0255182f2b2bcd2fcd2f003fed3fed12392ffd
c410c42b31301b4029120c0d0d06550f0c0d0d06554b1a791d8a1d9613a7
13c30cd60cdb1b080913180e2a1a03093005300bbaffe00003ffe0401013
0a15121313ca0e0f140e13140e0f0db802a440130e0a1e15400ea00e020e
0e0f40150115151c12b802bbb70f0401d340000100b801184020041e1c0d
115f106f107f108f1004108007731840212334301801001810180218b8ff
f4b70d0d065518902012bc0135000f0195000d0138b20eb501ba01380000
ffc0400b212334200040000200901fb80192b18b182b10f65d2bedf4edf4
ed10f62b5d712bedf45d3c003fedfd5de43fed12392f5d11392f5d10ed10
e487082e2b057d10c4001112393130013838383801715d2b2b5913371616
33323635342623220607271321152103363332001514070623222655bd15
996c82b4ad8c578c28a98e02d9fdb74f8491c00108748df4c8fd0180108a
8bc4a29ab24f3f1602f1acfe765cfef6d1c791b2e000>LGBEAB+ArialMT AddT42Char 
LGBEAB+ArialMT /CharStrings get begin
/five 24 def
end
LGBEAB+ArialMT /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N12 [15.185593 0.0 0.0 16.797699 0.0 0.0] Tf
(5) show
n
225.720001 491.600006 m
225.720001 495.679993 l
S
n
225.809998 495.559998 m
225.809998 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
235.139999 491.600006 m
235.139999 495.679993 l
S
n
235.170013 495.559998 m
235.170013 495.619995 l
0.060013 w
0 J
S
1.34 w
1 J
n
245.819992 491.600006 m
245.819992 495.679993 l
S
n
245.909988 495.559998 m
245.909988 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
255.23999 491.600006 m
255.23999 495.679993 l
S
n
255.269989 495.559998 m
255.269989 495.619995 l
0.060013 w
0 J
S
1.34 w
1 J
n
214.979996 487.579987 m
214.979996 498.319977 l
S
n
215.069992 498.259979 m
215.069992 498.319977 l
0.059998 w
0 J
S
1.34 w
1 J
207.0 469.700287 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
1 616 20 <000100df000002fb05c0000a00af402003400d11346b047f028f02990804
ac04010900060502030905010c0201ca0a00b8ffc0400a21233430000120
000100b8ffe0b41010025500b8ffea40110f0f0255001c0c0c0255000e0d
0d025500b8fff040190f0f065500100c0c065500100d0d0655001a0c0540
0d0f3405b8ffc0400e212334300501200540050205190bba013c01850018
2b4e10e45d712b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c003f3f173901
11393130015d005d2b212311060607353636373302fbb441d35497e22f74
047b3e7c1fae47ca5f00>LGBEAB+ArialMT AddT42Char 
1 172 19 <00020055ffe7041105c00010001d0155b10202435458400a1a1e0405141e
0d0d1709b8ffe8b40f0f025509b8ffe840190d0d02550911000c0f0f0255
00160c0c0255000c0d0d0255002f2b2b2bcd2f2b2bcd003fed3fed31301b
b10602435458400a1a1e0405141e0d0d1709b8fff4b40f0f065509b8ffe6
b40d0d065509b8ffee40190b0b0655091100100d0d065500100c0c065500
100b0b0655002f2b2b2bcd2f2b2b2bcd003fed3fed31301bb4062019101c
b8fff0b202200bbeffe00016ffe00012ffe0000fffe0406204068702880b
880fc90e0509070b180245134c154a19431b54135c155c19521b6b076b0b
63136c156b19601b79027706760b7a0f870698079610c918da02d606d60b
db0f1a1a1e0405141e0d0d17730940212334300901000910090209901f11
7300b8ffc0400e212334200040000200901ec78b182b10f65d2bed10f65d
712bed003fed3fed3130015d71005d003838383838013838385959131012
363332161612151002062322272613101633323611102623220706556bd3
a076b274426ad3a1d47991b9a97c7ca9a97e7c4a5d02d30104013dac5fb3
feffdafefefec3ad98b7019dfe97eff00168016aee698600>LGBEAB+ArialMT AddT42Char 
LGBEAB+ArialMT /CharStrings get begin
/one 20 def
/zero 19 def
end
LGBEAB+ArialMT /Encoding get
dup 49 /one put
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(10)
[8.03773 8.03773 ] pdfxs
n
275.339996 491.600006 m
275.339996 495.679993 l
S
n
275.369995 495.559998 m
275.369995 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
286.079987 491.600006 m
286.079987 495.679993 l
S
n
286.109985 495.559998 m
286.109985 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
296.759979 491.600006 m
296.759979 495.679993 l
S
n
296.850006 495.559998 m
296.850006 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
306.179993 491.600006 m
306.179993 495.679993 l
S
n
306.209991 495.559998 m
306.209991 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
265.919983 487.579987 m
265.919983 498.319977 l
S
n
266.009979 498.259979 m
266.009979 498.319977 l
0.059998 w
0 J
S
1.34 w
1 J
257.940002 469.700287 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(15)
[8.03773 8.03773 ] pdfxs
n
326.279999 491.600006 m
326.279999 495.679993 l
S
n
326.309998 495.559998 m
326.309998 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
337.019989 491.600006 m
337.019989 495.679993 l
S
n
337.049988 495.559998 m
337.049988 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
346.380005 491.600006 m
346.380005 495.679993 l
S
n
346.470001 495.559998 m
346.470001 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
357.119995 491.600006 m
357.119995 495.679993 l
S
n
357.149994 495.559998 m
357.149994 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
316.919983 487.579987 m
316.919983 498.319977 l
S
n
316.949982 498.259979 m
316.949982 498.319977 l
0.059998 w
0 J
S
1.34 w
1 J
n
377.220001 491.600006 m
377.220001 495.679993 l
S
n
377.25 495.559998 m
377.25 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
387.959991 491.600006 m
387.959991 495.679993 l
S
n
387.98999 495.559998 m
387.98999 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
397.319977 491.600006 m
397.319977 495.679993 l
S
n
397.410034 495.559998 m
397.410034 495.619995 l
0.060028 w
0 J
S
1.34 w
1 J
n
408.059998 491.600006 m
408.059998 495.679993 l
S
n
408.089996 495.559998 m
408.089996 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
367.859985 487.579987 m
367.859985 498.319977 l
S
n
367.889984 498.259979 m
367.889984 498.319977 l
0.059998 w
0 J
S
1.34 w
1 J
n
428.160004 491.600006 m
428.160004 495.679993 l
S
n
428.25 495.559998 m
428.25 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
438.899994 491.600006 m
438.899994 495.679993 l
S
n
438.929993 495.559998 m
438.929993 495.619995 l
0.060028 w
0 J
S
1.34 w
1 J
n
448.259979 491.600006 m
448.259979 495.679993 l
S
n
448.349976 495.559998 m
448.349976 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
459.0 491.600006 m
459.0 495.679993 l
S
n
459.029999 495.559998 m
459.029999 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
417.419983 487.579987 m
417.419983 498.319977 l
S
n
417.509979 498.259979 m
417.509979 498.319977 l
0.059998 w
0 J
S
1.34 w
1 J
n
479.100006 491.600006 m
479.100006 495.679993 l
S
n
479.190002 495.559998 m
479.190002 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
488.519989 491.600006 m
488.519989 495.679993 l
S
n
488.549988 495.559998 m
488.549988 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
499.200012 491.600006 m
499.200012 495.679993 l
S
n
499.289978 495.559998 m
499.289978 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
508.619995 491.600006 m
508.619995 495.679993 l
S
n
508.649994 495.559998 m
508.649994 495.619995 l
0.059998 w
0 J
S
1.34 w
1 J
n
468.359985 487.579987 m
468.359985 498.319977 l
S
n
468.449982 498.259979 m
468.449982 498.319977 l
0.059998 w
0 J
S
1.34 w
1 J
n
519.299988 487.579987 m
519.299988 498.319977 l
S
n
519.389954 498.259979 m
519.389954 498.319977 l
0.059937 w
0 J
S
1.34 w
1 J
n
103.739998 740.959961 m
103.739998 740.959961 4.019997 -233.220001 re
103.739998 522.440002 m
107.759995 522.440002 l
S
n
107.789993 522.380005 m
107.789993 522.440002 l
0.059998 w
0 J
S
1.34 w
1 J
n
99.720001 509.059998 m
110.459999 509.059998 l
S
n
110.490005 508.940002 m
110.490005 509.000031 l
0.059998 w
0 J
S
1.34 w
1 J
68.880005 503.240295 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
1 112 17 <000100ba0000018700cd000300254018023c000a023c5f006f007f00af00
04a0000100a004a198182b10f65d5ded003fed313033353315bacdcdcd00
>LGBEAB+ArialMT AddT42Char 
LGBEAB+ArialMT /CharStrings get begin
/period 17 def
end
LGBEAB+ArialMT /Encoding get
dup 46 /period put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(0.1)
[8.03773 4.022662 8.03773 ] pdfxs
n
103.739998 546.559998 m
107.759995 546.559998 l
S
n
107.789993 546.5 m
107.789993 546.559998 l
0.059998 w
0 J
S
1.34 w
1 J
n
99.720001 534.5 m
110.459999 534.5 l
S
n
110.490005 534.440002 m
110.490005 534.5 l
0.059998 w
0 J
S
1.34 w
1 J
68.880005 528.680298 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
1 836 21 <0001003c0000040705c0001e01c7b10602435458400911100d1813130655
0db8fff4b4111106550db8ffee4009101006550d1e14051eb8ffe8401713
1306551e1e111106551e1c0e1006551e0c0d0d06551eb802bb400c020a17
17201f10110202201f1112392fd4cd1112392fcd002fed2b2b2b2b3fed2b
2b2bc43231301bb10202435458400911100d0c121202550db8fff440090f
1102550d1e14051eb8ffe0400b121302551e140f1102551eb802bbb2020a
17b8ffe8b40b0b025517b8ffec400e0d0d02551717201f10110202201f11
12392fd4cd1112392f2b2bcd002fed2b2b3fed2b2bc43231301b40363b05
3b06bb05bf06bb07c708c91c07490c590c540e6b0c640e7a127a138912bc
12e51ae51bf01a0cbf0bb713021b101c101d101e1006befff00007ffe000
08fff00009fff0401a1e0a10080606ca1c1a141c1c1a081c1a030102081a
1c030d1e10b802a4b34f110111b80118b50d1e1405001eb802bb400f0102
0c0a7317d30000014021233401bb0281002000100138400c11b53f025f02
6f027f020402ba0224001f018fb18b182b10f65df4ed10f62b3c10f4ed00
3f3cfd3c3fedfd5de4111217390111121739870e2e2b0e7d10c401111239
313000383838380138383838005d015d7259592515212637363637363635
34262322060727363633321615140606070606070407fc37021725a39aef
a8997b829c01b913f8d1d3f648a7c2a25c1eadad413c63c07ec4e5666b93
9c8a13cfd9eaad58aabca4886131>LGBEAB+ArialMT AddT42Char 
LGBEAB+ArialMT /CharStrings get begin
/two 21 def
end
LGBEAB+ArialMT /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(0.2)
[8.03773 4.022662 8.03773 ] pdfxs
n
103.739998 570.73999 m
107.759995 570.73999 l
S
n
107.789993 570.619995 m
107.789993 570.679932 l
0.059998 w
0 J
S
1.34 w
1 J
n
99.720001 558.679993 m
110.459999 558.679993 l
S
n
110.490005 558.559998 m
110.490005 558.620056 l
0.059998 w
0 J
S
1.34 w
1 J
68.880005 552.800293 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
1 1390 22 <00010056ffe6041605c0002b0159b10202435458400b1918400d0d025518
1c0001b8ffc0402b0c0d02550129230a0d0f0c0f1e0a0a29151e1c041e29
1c05290d230d0c181901001220100c0c0255200726b8ffe8b40c0d025526
2f2bcd2f2bcd2fcd2fcd2f0012393f3f10ed10ed12392fedc610c6123910
c42b3210c42b3231301b4028050d160d450d860d0445115711761b035216
6c106a146416750d7914860d8a14891ba50d0a052003b8ffe0400b0b0c0d
0e040701230d0c01b802a4b340000100bb01180029000d0135b40c0c1504
18ba02a4001902684027151e1c05041e290d12735f206f200220180d0d06
55208007732640212334302601002610260226b8fff4b70d0d065526902d
18b80138b219d301ba01380000ffc0400b212334200040000200902cb801
92b18b182b10f65d2bedf4ed10f62b5d712bedf42b5ded003fed3fedfde4
1112392fed10fd5de411123901111217393130013838015d005d01715913
371616333236353426232207371633323635342623220607273636333216
1615140607161615140023222656b41f956b7fafa27d334c14120b73b886
6a698c14b421eaae78ca6b66648290fee8d6c1ff0183189987b0827ca114
9e02787d6382848420b5c767b2645f9c2e1ebd8ec0fef5e6>LGBEAB+ArialMT AddT42Char 
LGBEAB+ArialMT /CharStrings get begin
/three 22 def
end
LGBEAB+ArialMT /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(0.3)
[8.03773 4.022662 8.03773 ] pdfxs
n
103.739998 594.859985 m
107.759995 594.859985 l
S
n
107.789993 594.73999 m
107.789993 594.799927 l
0.059998 w
0 J
S
1.34 w
1 J
n
99.720001 582.799988 m
110.459999 582.799988 l
S
n
110.490005 582.679993 m
110.490005 582.740051 l
0.059998 w
0 J
S
1.34 w
1 J
68.880005 576.980286 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
1 1864 23 <0002001a0000041005ba000a000d0126403612580c680c9a0ca90cc90c05
4c034c0d94040312010208000c060307050a0b0307000c0c0d0dca030414
030304030d00020c0d040703bb02bb0008000201a0400a000404000c0c00
ca0a04b80266b705050a401d1f340ab8ffe0b4101002550ab8ffe6b40d0d
02550ab8ffeeb40d0d06550ab80137400d07402223340780213507900f02
b8ffc0400b0d14340002100220020302b8ffe0b40d0d025502b8ffe4b60d
0d065502b50eb8018cb18b182b10ec2b2b5d2b10f62b2bf42b2b2b2b3c10
e610fd3c003f3f10f43cf63c1139390111123939872e2b047d10c40f0f0f
313001435c58b9000dffdeb212390db8ffd4400b333903222d3903041d1d
3c2b2b2b2b595d005d435c5840140c400b390c8050390c4026390c221c39
0c402d392b2b2b2b2b5921112135013311331523110311010296fd84029d
93c6c6b4fe35015fa503b6fc4aa5fea102040295fd6b>LGBEAB+ArialMT AddT42Char 
LGBEAB+ArialMT /CharStrings get begin
/four 23 def
end
LGBEAB+ArialMT /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(0.4)
[8.03773 4.022662 8.03773 ] pdfxs
n
103.739998 618.97998 m
107.759995 618.97998 l
S
n
107.789993 618.859985 m
107.789993 618.919922 l
0.059998 w
0 J
S
1.34 w
1 J
n
99.720001 606.919983 m
110.459999 606.919983 l
S
n
110.490005 606.799988 m
110.490005 606.860046 l
0.059998 w
0 J
S
1.34 w
1 J
68.880005 601.100281 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(0.5)
[8.03773 4.022662 8.03773 ] pdfxs
n
103.739998 643.100037 m
107.759995 643.100037 l
S
n
107.789993 643.039978 m
107.789993 643.100037 l
0.059998 w
0 J
S
1.34 w
1 J
n
99.720001 631.039978 m
110.459999 631.039978 l
S
n
110.490005 630.919983 m
110.490005 630.980042 l
0.059998 w
0 J
S
1.34 w
1 J
68.880005 625.220276 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
1 2658 25 <0002004dffe7041505c0001d002a014fb10202435458401f0f011f015f01
03011b281e400d010d0d14051e1b05221e140d0a1e01002510b8fff44019
0d0d0255101e17100f0f025517100c0c0255170c0d0d0255172f2b2b2bcd
2f2bcdd4cd10c5003fed3fed12392f5ded10c45d31301b402d6b19014407
4015441944205a1254206b03640764086a1264207408751c8508861cd608
d4161107200d0d065527b8ffe0b40d0d065523b8ffe0400b0d0d06552120
0d0d065507b8ffe0b42720232021b8ffe04011281e400d500d020d0d141b
01d35f000100b802684009051e1b05221e140d01b80138401200b5257310
40212334301001001010100210b8fff0b70c0c065510902c0aba0138001e
013940163f175f176f177f170417160c0c065517160d0d065517b80224b3
2bc78b182b10f62b2b5deded10f62b5d712bedf4ed003fed3fedfd5de411
12392f5ded313001383838382b2b2b2b015d005d59010726272623220706
060736363332121514060623220011103736333216011416163332363534
2623220603fbb3182c496b564155620241bc67b4fd77d084e1fee49d89e8
adddfd374f8e4e72a4a27b7aaa04530e6a304d303eeedc6360fef7d28aed
7e014b017c01a9c1a8c2fcdd5daa59b89e98afaf>LGBEAB+ArialMT AddT42Char 
LGBEAB+ArialMT /CharStrings get begin
/six 25 def
end
LGBEAB+ArialMT /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(0.6)
[8.03773 4.022662 8.03773 ] pdfxs
n
103.739998 667.219971 m
107.759995 667.219971 l
S
n
107.789993 667.159973 m
107.789993 667.220032 l
0.059998 w
0 J
S
1.34 w
1 J
n
99.720001 655.159973 m
110.459999 655.159973 l
S
n
110.490005 655.100037 m
110.490005 655.160034 l
0.059998 w
0 J
S
1.34 w
1 J
68.880005 649.340271 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
1 3128 26 <000100610000041605a7000d0070400ec40d01040d010402080409030d00
b802bb4030020104090c0d73030302402123344f025f026f0203021a0f08
7309eb004f015f015f02033f015f016f017f010401190eb80192b18b182b
4e10f45d713c4df4ed4e10f6712b3c4d10ed003f3f3cfd3c391139011112
39313001715d13352115060003060723361212376103b58cfeed4b360fb9
0382f38904faad8c95fe12fefbb8dbad01ea01c79c00>LGBEAB+ArialMT AddT42Char 
LGBEAB+ArialMT /CharStrings get begin
/seven 26 def
end
LGBEAB+ArialMT /Encoding get
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(0.7)
[8.03773 4.022662 8.03773 ] pdfxs
n
103.739998 691.339966 m
107.759995 691.339966 l
S
n
107.789993 691.279968 m
107.789993 691.340027 l
0.059998 w
0 J
S
1.34 w
1 J
n
99.720001 679.279968 m
110.459999 679.279968 l
S
n
110.490005 679.219971 m
110.490005 679.279907 l
0.059998 w
0 J
S
1.34 w
1 J
68.880005 673.460266 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
1 3300 27 <00030053ffe7041905c00017002300300200b10202435458b40c001b1e2e
b8ffc04017131302552e2e12211e0605281e120d1e090c0c0c025509b8ff
f4b60d0d0255092b0fb8fff0b40f0f02550fb8ffe8b40b0b02550fb8ffe8
b60d0d02550f1803b8fff0b41010025503b8fff0b40f0f025503b8fff440
190d0d02550324150c0b0b0255150c0c0c0255150c0d0d0255152f2b2b2b
cd2f2b2b2bcd2f2b2b2bcd2f2b2bcd003fed3fed12392f2bed393931301b
b10602435458b71e090c0c0c065509b8fff4b60d0d0655092b0fb8ffe4b4
0f0f06550fb8ffe4b60d0d06550f1803b8fff0b40f0f065503b8fffc4022
0d0d06550324150c0c0c0655150c0d0d0655150c001b1e2e2e12211e0605
281e120d003fed3fed12392fed3939012f2b2bcd2f2b2bcd2f2b2bcd2f2b
2bcd31301b4037351601291649164926e60ce930050930017d007d017c04
7408710b720c750d7a178b008a018c048608810b840c860d8d17cc11c613
1222b8ffe0b21c201ab8ffe0b220202fb8ffe0b22d2026b8ffe0401e2920
0c001e18000c1b1e2ea02e012e12211e0605281e120d1e73bf090109b802
6740102b730f40202334300f01000f100f020fb80191b6321873b0030103
b80267b2247315b8ffc0400e2123342015401502159031c78b182b10f65d
2bedf45ded10f45d712bedf45ded003fed3fed12395d2fed393901111239
393130013838383838383838015d72710071595901262635343633321615
140607161615140023220035343613141633323635342623220603141616
333236353426232206016a706ce6bfc0ea6b6d878dfef6d9d9fef6916286
6b6885896667883a49905381a8ad827fa7031b29986aa0dadfa06697292c
c488bcff000101c08fc101546884835f638784fcff4d904fa68082aaa800
>LGBEAB+ArialMT AddT42Char 
LGBEAB+ArialMT /CharStrings get begin
/eight 27 def
end
LGBEAB+ArialMT /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(0.8)
[8.03773 4.022662 8.03773 ] pdfxs
n
103.739998 716.839966 m
107.759995 716.839966 l
S
n
107.789993 716.719971 m
107.789993 716.779907 l
0.059998 w
0 J
S
1.34 w
1 J
n
99.720001 703.400024 m
110.459999 703.400024 l
S
n
110.490005 703.339966 m
110.490005 703.399902 l
0.059998 w
0 J
S
1.34 w
1 J
68.880005 697.580261 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
1 3960 28 <00020055ffe7041905c0001e002a01aeb10602435458b70b1f1801002511
18b8fff6b40f0f065518b8fff4b40d0d065518b8fff040280c0c06551811
0c0d0d065511100c0c06551118112c2b0b281e0f0e1f0e4f0e030e0e1400
50010101b8ffc0400d1011065501041e1c0d221e1405003fed3fedc42b5d
3212392f5ded3201111239392f2b2b2f2b2b2b10cdd4cd10ddc531301bb1
0202435458b70b1f180100251118b8ffeab40f0f025518b8ffea402a0d0d
025518110c0c0c02551118112c2b0b281e0f0e1f0e4f0e030e0e14005001
0101041e1c0d221e1405003fed3fedc45d3212392f5ded3201111239392f
2b2f2b2b10cdd4cd10ddc531301b40343a1a4c1640235b16572366036c16
6d1a67237a1a7d1e8c1a8b1e9a16a91abc1aea16e620f620133d169e16ad
16033a2964060227baffe00023ffe0401821200620281e4f0e5f0e020e0e
1c221e140501d350000100b80268b4041e1c0d1fba0139000b0138401118
40212334301801001810180218902c01b80138b400b5257311b8ffc0400e
212334201140110211902bc78b182b10f65d2bedf4ed10f65d712beded00
3fedfd5de43fed12392f5ded31300138383838005d71015d595913371616
33323e023534270606232202353400333216121110020623222601342623
220615141633323670ad167c61537d50360136bb6db6fc0107c68fed7b7a
f1a2acda02cba57478b2a97c7da10153107a6e4c7fd8700c18566b0108d8
df01109afee3fef2fee7feb3aebf03349bb6c49c8cafaf00>LGBEAB+ArialMT AddT42Char 
LGBEAB+ArialMT /CharStrings get begin
/nine 28 def
end
LGBEAB+ArialMT /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(0.9)
[8.03773 4.022662 8.03773 ] pdfxs
n
103.739998 740.959961 m
107.759995 740.959961 l
S
n
107.789993 740.839966 m
107.789993 740.899902 l
0.059998 w
0 J
S
1.34 w
1 J
n
99.720001 728.900024 m
110.459999 728.900024 l
S
n
110.490005 728.779968 m
110.490005 728.840027 l
0.059998 w
0 J
S
1.34 w
1 J
68.880005 723.080261 m
%ADOBeginSubsetFont: LGBEAB+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEAB+ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(1.0)
[8.03773 4.022662 8.03773 ] pdfxs
341.039978 465.440277 m
%ADOBeginSubsetFont: LGBEAC+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
/LGBEAC+TimesNewRomanPS-ItalicMT 5 GetGlyphDirectory
625 <001C60D8A8C9B75E5E574020B20AFBD65B61A58D8C48342CE08167E44EF
710841ED29C7662D1B64DEEC6E1A6927D4F327155BE8D3242940FCCD56F9EEA3
3D9ED4B0ED129DEEEAA39AFF44F701141710065178D87D0D20AAF9990D280473
3C2E5F7A265C64870B446C82489190642F0397D90F9B6F05B09FF5A96F418199
10F6BA60A4E3596C044E077282FFE348DB43483217E98> |
610 <001C60D8A8C9B7A73DB696F616AD1E8C523DE2B82F13E539F2F5A98334D
0F55E69681EECBE9B8A6737821D0F5F2E5CCD10AE66D05B24634FCB536ABB3D1
8B9AE2364247F3079311F0F664E8EFC71D35DBD2056E6DBC9AB676CC715ADF61
6F40186A41F1F1E8D396CCA0D4DEB685A8C4CF22769FBF31380B7F82F5FA3962
F95127689C242A4E17F2F2DF79D6606A1804F16E0A5216C499E1D01CEA95AF76
03586F0E7429258710EA1FBAC4DDA445445227ACF52EDE53BF6B28776FFF0127
349B7B208B20EE113251D3C39604822EBD08E7D21DF4145E8DA9EC3E62CE9D7D
7817BCBDFCAA13B4AC56F6BFD37E6BE93A87B712E81AA20ECA0F3A345A18CE5C
028861DD4FCCE70E2A84D8EBB69C7> |
619 <001C60D8A8C9B77FE2C1AAE0EC93E571B636F5347D3714722A84750C1B2
9A39B8539044786FB4D21214EC790263603D768977575E3DFEDEB06ED210B719
A1951D9CD3A1CEDC2DBBBA9F50EB52B23C7BC0E7C5116FC1274BBC998D424E35
18595216116D6B76CDF4E0BCDAF27025304BCCA1980CECDB742C27E839F34D43
8C5CC751D1A202A9B0CBB89CFB07DF67AB5E8EE4143A6BB864E7AFD01C988BDA
57BAAFB46475895EDA7DC9A3D645E52BE6B50DA1C1724C629C5533C12A95B43E
497C080A6D8450597> |
613 <001C60D8A8C9B76798E3BC5F768069F63DCBFE6F41015F0CD7424D04AEA
3765E3A0F56BC25D66F2C6675E129F1CA22DE7EDFAFB85127BC923A7D86A4A2F
160F4392402F99AD7885052313BEE466BE7BA96158146DC5A75AC1B38758CF99
3063269CC616FE93FA9E6BDC76A479AC73AFDEBB4DB7DAF79266DFF597B71DFF
A8E67A70475A193AA16BDF0F94CC9692A31CD4C46C7418BE871A6BF0527F1C58
7E4C75568E66359C3B1829A8BC50E222F8C33F50196881D> |
616 <001C60D8A8C9B7A73DB6821681307BB58AF24E53259C166A4EBACA0E69F
5B8B042F6E6706D71FE2C4006799F0D83733098F02E11647B564DF12A496B06E
AD656E6D297AE5BF88AE7615ABAF60F522DC6D667D6E703D83FA4EACD5E65559
1C5F794B5601A90C6028B31DB06F3BFF28E5BAA1BCA504CD90A443D934E8ED98
B1E48DB90AD3B6CC51A1E1FA2EC8D3518D7436B0D1C> |
!
end
end end
%ADOEndSubsetFont
/N19 [20.016296 0.0 0.0 21.787506 0.0 0.0] Tf
(\002q\002b\002k\002e\002h)
[9.419901 10.680693 9.403408 9.359732 9.880176 ] pdfxs
396.000763 465.440277 m
%ADOBeginSubsetFont: LGBEAC+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
/LGBEAC+TimesNewRomanPS-ItalicMT 6 GetGlyphDirectory
602 <001C60D8A8C9B7A73DB68C06FC199F1F2F20B1C2E3715651C87BCD4ADD6
8775B4647B129144EBE49EAC15F019B26773F428CC0D1BB4A6183FD1BAD53C3D
C7DC1778E21FEA13949F179F397E1068E68EF5BDF24BE0DC7557B673C23D4A50
497DF80D9C838AB9EEA3C59483A8E7BD334D2361BCA7F19AE87B1D972F7B79AB
AD07378C084886016D514CC545EA1F4A9EE8851A3C3F902C0F0DCD2FEE069D9B
C213BFD5E5AFCA4D73D61283DE2191744FD94BBAE1E2CE71F1DD86C9281938B9
6442B456E7FA2EA8852C51CB5A9C2A0AFF4A5706E78B9A6A93AA2E14914A3A33
55D7AE853081C2D03136A31> |
605 <001C60D8A8C9B73549CF615123AEE999920816945202EAC79831B6EFC91
E7BF0F7CC5AA72BC84A7BFB3D004CFE91EAF79A3B004F5788F4CAFA7A43D9DDF
C689A3275BA11B1F87B93D83C6863B133C9422B4CA12EB10B1777A59DE9294DB
3389EFFF9C1BBBDC535A051A6D4CC00CCD854DE123937ACD9A42F8B1DAF7742C
B015561D990A5002BB7F9C50AD07DD3EFF1B1EF97A17320F67AEE272918C34F6
CA5C418EF> |
618 <001C60D8A8C9B7A73D8E81CAA60D14E3E98C0D2FD6C0FE14932EBBC211F
CCD95A1D460AC52A0F496A2C687311E458BE788F585F2EC011630EE479F8CE32
732323FB51AEA057516EAE9F9922C730835B07AFBFD3EAEC895776CA820891CE
BCA38B12400B0F533275C3E47E82C1EB34E8569C9E34F75D9EF0C922FBF2A8DB
24889EFE4DC9550EAC6CBB8D3FAA10C3DCE89EBFB5A57A61C2D585400E3BE716
8CC6634856FD9B6786156D0E29B9155A232F8173BD9BF9068F6A1DBDF6FEA07A
12AB5979F293307E89C8497A7FB428878075213816DE886B201A53ACD545555D
F7DC03C070EEF770038D1C455B13725F1BD91> |
620 <001C60D8A8C9B6079F294C4EE7B58DD8549C7A301BB90EFCD355016DAFC
9A388412536D7A2E886C8D640A4C7783E0796960D40AE1B1791784274642CCFB
691F36307EDF8E8446214A1889CF4277988EC4C2195F54D6C384A6175E65E708
C4048FE9229254DCCE698804A484B506134BF418D0C8628102130364D1965236
0BB35F09AD44B769546EF6AF789EFF3D5DFFFCA19ABB2178EE13E00C37C31B65
C0B479141272F98B246D2AC399E147E05EC4B23A6D96C9AC0C70DDF5869A095C
41F0D75E8A3216EEE5BE2138C33580B53CB3747DAB1DDD8B2076C83FFCDA28D7
5E936383254D10FA13A9B70D344720970D85450575B72C0569D3235625D41987
8B686876548F8DF1FAD4F3B0F8B637CEE500E8AAA6FCB94F818A9FE160DE886D
B2DF71EE98486C4B97E7016F4D897B80AE8402E0025B41950E80C2D7466150DF
B224CD3540E4B45D021A319CC07F7> |
614 <001C60D8A8C9B673A5785B07FB84729AAEAD1AACB23D57BCBA30EC5E59D
1FCC57F295B07552C44E89F683A4380FE56AAD1CE2D98891719E67D6C86CFEB0
9C762EC0E46A849CD70B00642007A7255ED239F9F02BA5B65CB6FE7D0E0E21F8
A05750E4BADA50A7069210E4ED1C68DF2A62B7FCE8796B3F184FC7D752C40433
216E81DE4FD2E50EF7DFA756608AF9E70F804B7F70DB1F4B389171755370DF24
A96E5BE3059F1E2A7A4E47F9F115DB8543A45CFA174AED1> |
604 <001C60D8A8C9B7693F7D7DCFCF7D12E83DF61F58C79E903347CD09B93A3
5750B6CE02D530488ED85E24F5FD7427487E8F1FF0AB1DC9D9A4AED0A0E21CFC
825F56B9158CCC6CF9AED5C661078DC203311E1D077C821FC6B38076A4E46EFE
22C471E50C23F9EB1AC68CF07DC6CC5BB670C35C9435B6C2398A1CAA83566C57
C734715361C4DEB2B563A5471479A6F5AF643108AF08D38278A1746ADF259B9B
8B7BC03E18E1AEA50A7837F217FBC96CE6323E059575C1795C2488B2175> |
!
end
end end
%ADOEndSubsetFont
(\002Z\002e\002]\002h\002j\002b\002l\002f\002h\002\\)
[10.708792 9.427842 8.096497 10.680693 10.708792 10.708792 13.37698 13.47105 10.708792 9.387831 ] pdfxs
503.280121 465.440277 m
%ADOBeginSubsetFont: LGBEBD+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEBD+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 368 15 <0001ffebfeff011000b40014002f400c001414ef3f0e017f0e010e11ba01
74000402b5b7003e0b19156df5182b4e10f44dece4ed002f5d71ed10c931
30073637363534272626272635343633321615140607154b2f2406043003
073b28293f8c85e122342825120f08300911162b3e423259b632>LGBEBD+TimesNewRomanPS-ItalicMT AddT42Char 

1 0 3 <> LGBEBD+TimesNewRomanPS-ItalicMT AddT42Char 
1 956 81 <00010027ffe803ad03890036018f400901180c392d180c390ab8ffde409c
13143e14221339082f16001b021b2f0451075209521e512079017b2d891e
a627a428ba02ba260b5c015c28bf01035a095a1e5a2003690669096a1e79
09791e7b2606562a51356c260352000114221935132219350101022a2b2b
00131436452d5a283530364d0001232c01002d9f2301233104040007070c
0c1f1b20141b1b20002b00362b1f2c2d142c2c2d2c2b0a180b1b3728201b
2d2c10148a13b80143b30c072520b80124b20c251bb8ffc0b25c351bb802
95b235c92dbc0124002b0203002cffc0b217392cb8ffc0b25c352cb8ffc0
b23a352cb8ffc0b32a34342cb8ffc0b32324342cb8ffc0b21c352cb8ffc0
4013191a34ef2c012c19371b172c171b370a3286182b2b103c2b2b4e10f4
5d2b2b2b2b2b2b2b4dede4e4f42bedf4ed10f6ed2b103c103c2b10c0003f
3f3c87052e2b087d10c4870e2e182b7d10c400183f3c10ed720111123900
11123910f5ed2bfc01f510c987100e7dc4083c3130012b2b5d5d5d4bb032
534bb036515a58b120223859015d005d015d712b2b2b2b01031236333216
151407030615141633323736371706070623222635343713363534262322
07060607060707231336353426232207072701c485bbc75c32411d7a1510
090c11353f1f5d533a2e252c2274161a131c274aa0592f1f3296b620231a
0c1e26060389fe390117b042353c64fe5b49100e130d2a56138539272d26
307501924b2a1419182dcfa15565a5027271171621040624>LGBEBD+TimesNewRomanPS-ItalicMT AddT42Char 
1 0 0 <0002010000000500050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121010004
00fc2003c0fc400500fb002004c0>LGBEBD+TimesNewRomanPS-ItalicMT AddT42Char 
LGBEBD+TimesNewRomanPS-ItalicMT /CharStrings get begin
/comma 15 def
/space 3 def
/n 81 def
end
LGBEBD+TimesNewRomanPS-ItalicMT /Encoding get
dup 44 /comma put
dup 32 /space put
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N20 [20.016296 0.0 0.0 21.787506 0.0 0.0] Tf
(, n)
[5.340348 5.400396 10.344421 ] pdfxs
70.259491 759.020325 m
%ADOBeginSubsetFont: LGBEAC+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
/LGBEAC+TimesNewRomanPS-ItalicMT 5 GetGlyphDirectory
572 <001C60D8A8C9B7D8BE161090B4306626FB679B706E6F4139B4B79C97463
D9A69CAF58AA09F4964EEC013B2FC4FA7699800B865D2071C68837730B9BC091
53A467C6987AA9EFAACC04FBFAD7BB080076F75C6C6273F57F6D0CEFC0279585
E846C9D9E795ABD1D4349C960B4DBA9914AFCF36BC91E1F8F92C8C7274139F9D
7700EC2A27019841395968BFAB5CAE25E51DB74FC1DF6E905ED0B31DF219F96C
B608A5B08C8661FD2FF160B5117F4A89DF5B01575674FBC169DBF2A343754930
A87B0715F70F21BA2751B8CDBFA7766DED836903D16234290F9C5A391A256942
3D163F1ECE6C4E56278A98DF84129173A7291061237C29A314067AF9E9AE6> |
607 <001C60D8A8C9B77FE2CEBC851BC1D55BEFCC6636F8B07C124AAAAD6AC23
7A2E0178B712156D556EE6FB45645CC6CBEAF8E97CBE4F832E2F621B213660DC
4F9A0F0631BE4B937D282930FF5CB48932FE4C3118EA58028F6EA53582C8DE24
52B3135816834C0E4D947BA5BD58F1D5AB9E28423127BFB8D26FB6EEF3AB8E9B
9D2410DD3AF694FFEBD7B7FE682E5B937ACC2C6A43489D3F9EF3944E87BAD684
2E7160B3BC59BD87C15EE67EE949D19E2030F058D91390B17854C6C> |
633 <001C60D8A8C9B74A3EF3DA3AB74A781AF2FCE4CA8841962CC29D80A219F
7F9E477D7DE7D10D4978660F2DE0CDCE2437BCDF43D9099F31CD1B46191EFE02
FC66C880B6ED606D9C7454629D903151CA263C062C168F4846A0C0AE58461476
C05435DCF29FCB3A742C40AB7A479BFDBC98369C6BB0A7BAC4AA42A71C8163EC
36621E84E6BB4518EE50E8BECB344DF21F9F37CC5794D5E44A868C3FCEF5FADF
31B52F3816F23B8AD312C178D420668BD13667FA189A4246EEBFBF531834C173
E25> |
615 <001C60D8A8C9B7AB675405E7968A64B7744806E866F5D9F2027A1AD626E
EA23A75C0E72BEBB89ADBF3965CCA0B893D63AABEECD1FCBEBE25102EF46CB61
7A3D74CB8A213220FFE0C4669AF775D1BC5DC7717F77EC68093277C182A9107E
B7FD494750A88F0F00AFDB31776E79001C8D08376> |
630 <001C60D8A8C9B7741C1822ECDEA5DDE083190D61350DA88224CB2EB1B80
E2919FEC25215FAC97AC54517E2202C7F6D96F633EF0336194C5B7B5C4022B9B
03DCA7B958B5ACE2C4A3C89543427AA6148BC153550BBB402A0FF8E68BFA4EAF
C0CC5380F2016B3F94DF47DA4BFC4E21BA7F3A66B7865F4CCC37E08B1B02809B
2BAF83584F3155685B59EF9B0D346DD35FC8A183659807589FD946253C0DB900
83A7F585D83D47D> |
!
end
end end
%ADOEndSubsetFont
/N19 [20.016296 0.0 0.0 21.787506 0.0 0.0] Tf
(\002<\002_\002j\002h\002y\002l\002g\002h\002k\002l\002v)
[12.043802 9.343545 10.740862 10.740862 9.34385 13.436843 10.678861 10.740862 9.403408 13.37698 9.840165 
] pdfxs
194.939011 759.020325 m
%ADOBeginSubsetFont: LGBEAC+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
/LGBEAC+TimesNewRomanPS-ItalicMT 3 GetGlyphDirectory
617 <001C60D8A8C9B7A73DF087C158A303AE922A1CFBE99458C02E528DF85BC
6412E6FDD19DEE624C52F34F700473C3AF58CFD622B892B54F8D6362CC51D384
8E5F8B6B32B7B11E5E94464027CCA3CF1614C8F48813802B308AF8EC8766137E
B89CD5DD757628F33FCEA75D425A44D9BACEE2228E64D06D107FD7CF2CD26322
E84A7ED288FE0F79BC1C309E227374927714BC56EB962BF48D51F35D6762D6E3
752739DD5CCAA41E9D5E43DD7EF5CD51215167BF87390988E3AF0B364F3ACEB0
FB5C2394968F3DBA5DCC32E43963EC56DCDE85C8CB04CD0FA96CC48CFDB5153D
23F36F9AB24> |
603 <001C60D8A8C9B7A4C86C41A25C58DFB58E562CAE2F54B84403678437BCE
606679CEDCDD71028529F9FE4A6F47EAC39D778BF5244BA8FE4D1710F6CF72B0
E3D376E376D13B28E7134E2A55DD2DABC462881F80EC453858F04C546F816C6C
9938847D6CD8B8EFF0F665B9E0AFE987F9BABBDB0B6BDF3F56088BCD03FA25B0
8E0874F743A1ECD225C9F0CA3FD4295CF680F75323247BB91806CC98826F2DE1
ECEADFBF6ACF82CA2F11EE5A158F4A54CA145E3C930188EA9778395E2F64DEC5
F346560907F4ABBD54A5C6306C21714FB6BD304DA20037311C43C3908C68D> |
621 <001C60D8A8C9B77FE2A5F6578EB74A5BFD70E96F53281130D42B07852DD
CDED49DD330FC357D6058C03E8610E8E1D643E8CA0EBC7995F8BABA9747A0C2E
2ACA69173E30D3ACD29C808B16AC9A852CB62CBDD288A4A7E966451A68CB6890
FD61B1EF6E37046C4AE362DFF52C05E5E0E60BC6A163B19979A909E3D594EE95
DCBC6E7C631883A0E99BDB5D8D9A3E3E1A27177F57AE523C60D5B87B9A8F9597
3B7E240DB57053F25B7E2735427EEA7A7AB55075C8F2065CBC552B611C79F3A0
8A738B67D80BCFC3A017B83DD56AA10FE2705CDE9136F3729D089A4CE85B23F7
9FC3F372F0C03CE3A67067C37B87214D407E8CDB95C04AC4E38F20F21F7B960D
30FD020> |
!
end
end end
%ADOEndSubsetFont
(\002i\002_\002j\002_\002h\002[\002m\002q\002_\002g\002b\002y)
[10.702683 9.403408 10.702683 9.343545 10.702683 10.742694 9.343545 9.359732 9.403408 10.738724 10.702683 
9.982187 ] pdfxs
315.599274 759.020325 m
%ADOBeginSubsetFont: LGBEBD+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LGBEBD+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 484 52 <00020061fe5005bd056b002500370124404e34164305433779108b109a10
a910bd100829013500350139313a37452e49314f37551c53205429552a51
2e5c325b33642a602e6a3476287c3485298e3294289b31b62aba32bc331b
35221e123f2cb8ffde40091e123f7910010a0b15bb0118001200010344b2
03e312b8031eb30e0b2f0ab80392400907b70e0f26331e0317b803444014
2f2e0009010016171d1723000114001718000117b8019cb70000352c0ba9
2216ba0118002c037f400d1a405c351a404764341a653835b8037f401822
4021413f224015233f22405c3522404764342240433522b80117b6703901
39655c182b105df62b2b2b2b2be910f62b2be9e410e41112392fed87082e
2b2b7d10c401113900183fede53fed3ffdf4e410f4fde510e40110c93130
005d012b2b5d005d05053633321604333236371706042322272623220607
270126023534000033321616151400041322060607061514163332363736
123534260257fefe3d3432550117686f9b492167fee89d5797e75c232c2c
17019abec40109019dc794d172fefafe7b9c64bfbc4b5b92975ab05e78a2
921fd10b0c3f4d5a10948322330a131b01441a011aa0db01d4010178e578
e6fe28f3054663e1b6e0c78edb5a6c8a01aab787d200>LGBEBD+TimesNewRomanPS-ItalicMT AddT42Char 
1 104 11 <0001008cfe4a038a058e0010003cb70708010113091112b80181b30f00a6
01b80145b3050a3b09b80156b50f4305191142b9021000182b4e10f44ded
fde410fded10e6003f3f3130015d01072627263510371201170607060215
1401812277342895b7019a18b97592bafe5a10e3ae888a0142ff01380128
2389aad4fda8f6bc>LGBEBD+TimesNewRomanPS-ItalicMT AddT42Char 
1 232 12 <0001ff21fe4a021f058e00100043b70908010111091311b80181b30f00a6
01b80145b3050a3b09b80156400a0f430f051f0502051a12b801e8b15018
2b4e10f65d4dedfde410fded10e6003f3f3130015d013716171615100702
0127363736123534012a2277332995b8fe6718b97592ba057b13e2ae888a
febdfefec7fed81f8aa9d40259f6bc00>LGBEBD+TimesNewRomanPS-ItalicMT AddT42Char 
LGBEBD+TimesNewRomanPS-ItalicMT /CharStrings get begin
/Q 52 def
/parenleft 11 def
/parenright 12 def
end
LGBEBD+TimesNewRomanPS-ItalicMT /Encoding get
dup 81 /Q put
dup 40 /parenleft put
dup 41 /parenright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N20 [20.016296 0.0 0.0 21.787506 0.0 0.0] Tf
(, Q\(n\))
[5.324335 5.340348 14.772029 6.719322 10.740745 6.985538 ] pdfxs
5.362 w
n
123.839996 521.119995 m
134.580002 550.580017 l
143.940002 576.080017 l
154.679993 598.880005 l
164.039993 617.659973 l
174.779999 633.73999 l
184.139999 647.119995 l
194.87999 659.179993 l
204.300003 668.539978 l
214.979996 677.959961 l
225.720001 684.679993 l
235.139999 691.339966 l
245.819992 696.73999 l
255.23999 700.76001 l
265.919983 704.779968 l
275.339996 708.799988 l
286.079987 711.440002 l
296.759979 714.139954 l
306.179993 715.459961 l
316.919983 718.159973 l
326.279999 719.47998 l
337.019989 720.859985 l
346.380005 722.179993 l
357.119995 722.179993 l
367.859985 723.5 l
377.220001 723.5 l
387.959991 724.880005 l
397.319977 724.880005 l
408.059998 726.200012 l
438.899994 726.200012 l
448.259979 727.519958 l
519.299988 727.519958 l
1.0 0.6902 0.0 setrgbcolor
S
2.681 w
n
123.839996 522.440002 m
134.580002 547.940002 l
143.940002 572.059998 l
154.679993 600.200012 l
164.039993 617.659973 l
174.779999 639.079956 l
184.139999 645.799988 l
194.87999 657.859985 l
204.300003 668.539978 l
214.979996 677.959961 l
225.720001 687.320007 l
235.139999 692.719971 l
245.819992 692.719971 l
255.23999 703.400024 l
265.919983 707.419983 l
275.339996 710.119995 l
286.079987 710.119995 l
296.759979 712.820007 l
306.179993 718.159973 l
316.919983 718.159973 l
326.279999 720.859985 l
337.019989 718.159973 l
346.380005 722.179993 l
357.119995 723.5 l
367.859985 723.5 l
377.220001 722.179993 l
387.959991 724.880005 l
397.319977 726.200012 l
408.059998 724.880005 l
417.419983 727.519958 l
428.160004 726.200012 l
438.899994 726.200012 l
448.259979 727.519958 l
519.299988 727.519958 l
0.0 0.0 1.0  setrgbcolor
S
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
